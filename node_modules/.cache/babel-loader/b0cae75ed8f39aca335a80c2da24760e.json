{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\checkbox\\checkbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\checkbox\\checkbox.vue","mtime":1561122214853},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["import _defineProperty from \"E:\\\\TRADE\\\\ThinkPHP\\\\pingzi\\\\Application\\\\Admin\\\\View\\\\TGorder\\\\generalize\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { findComponentUpward, oneOf } from \"../../utils/assist\";\nimport Emitter from \"../../mixins/emitter\";\nvar prefixCls = 'ivu-checkbox';\nexport default {\n  name: 'Checkbox',\n  mixins: [Emitter],\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      type: [String, Number, Boolean],\n      default: false\n    },\n    trueValue: {\n      type: [String, Number, Boolean],\n      default: true\n    },\n    falseValue: {\n      type: [String, Number, Boolean],\n      default: false\n    },\n    label: {\n      type: [String, Number, Boolean]\n    },\n    indeterminate: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      validator: function validator(value) {\n        return oneOf(value, ['small', 'large', 'default']);\n      },\n      default: function _default() {\n        return !this.$IVIEW || this.$IVIEW.size === '' ? 'default' : this.$IVIEW.size;\n      }\n    },\n    name: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      model: [],\n      currentValue: this.value,\n      group: false,\n      showSlot: true,\n      parent: findComponentUpward(this, 'CheckboxGroup'),\n      focusInner: false\n    };\n  },\n  computed: {\n    wrapClasses: function wrapClasses() {\n      var _ref;\n\n      return [\"\".concat(prefixCls, \"-wrapper\"), (_ref = {}, _defineProperty(_ref, \"\".concat(prefixCls, \"-group-item\"), this.group), _defineProperty(_ref, \"\".concat(prefixCls, \"-wrapper-checked\"), this.currentValue), _defineProperty(_ref, \"\".concat(prefixCls, \"-wrapper-disabled\"), this.disabled), _defineProperty(_ref, \"\".concat(prefixCls, \"-\").concat(this.size), !!this.size), _ref)];\n    },\n    checkboxClasses: function checkboxClasses() {\n      var _ref2;\n\n      return [\"\".concat(prefixCls), (_ref2 = {}, _defineProperty(_ref2, \"\".concat(prefixCls, \"-checked\"), this.currentValue), _defineProperty(_ref2, \"\".concat(prefixCls, \"-disabled\"), this.disabled), _defineProperty(_ref2, \"\".concat(prefixCls, \"-indeterminate\"), this.indeterminate), _ref2)];\n    },\n    innerClasses: function innerClasses() {\n      return [\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-focus\"), this.focusInner)];\n    },\n    inputClasses: function inputClasses() {\n      return \"\".concat(prefixCls, \"-input\");\n    }\n  },\n  mounted: function mounted() {\n    this.parent = findComponentUpward(this, 'CheckboxGroup');\n\n    if (this.parent) {\n      this.group = true;\n    }\n\n    if (this.group) {\n      this.parent.updateModel(true);\n    } else {\n      this.updateModel();\n      this.showSlot = this.$slots.default !== undefined;\n    }\n  },\n  methods: {\n    change: function change(event) {\n      if (this.disabled) {\n        return false;\n      }\n\n      var checked = event.target.checked;\n      this.currentValue = checked;\n      var value = checked ? this.trueValue : this.falseValue;\n      this.$emit('input', value);\n\n      if (this.group) {\n        this.parent.change(this.model);\n      } else {\n        this.$emit('on-change', value);\n        this.dispatch('FormItem', 'on-form-change', value);\n      }\n    },\n    updateModel: function updateModel() {\n      this.currentValue = this.value === this.trueValue;\n    },\n    onBlur: function onBlur() {\n      this.focusInner = false;\n    },\n    onFocus: function onFocus() {\n      this.focusInner = true;\n    }\n  },\n  watch: {\n    value: function value(val) {\n      if (val === this.trueValue || val === this.falseValue) {\n        this.updateModel();\n      } else {\n        throw 'Value should be trueValue or falseValue.';\n      }\n    }\n  }\n};",{"version":3,"sources":["checkbox.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <label :class=\"wrapClasses\">\n        <span :class=\"checkboxClasses\">\n            <span :class=\"innerClasses\"></span>\n            <input\n                v-if=\"group\"\n                type=\"checkbox\"\n                :class=\"inputClasses\"\n                :disabled=\"disabled\"\n                :value=\"label\"\n                v-model=\"model\"\n                :name=\"name\"\n                @change=\"change\"\n                @focus=\"onFocus\"\n                @blur=\"onBlur\">\n            <input\n                v-else\n                type=\"checkbox\"\n                :class=\"inputClasses\"\n                :disabled=\"disabled\"\n                :checked=\"currentValue\"\n                :name=\"name\"\n                @change=\"change\"\n                @focus=\"onFocus\"\n                @blur=\"onBlur\">\n        </span>\n        <slot><span v-if=\"showSlot\">{{ label }}</span></slot>\n    </label>\n</template>\n<script>\n    import { findComponentUpward, oneOf } from '../../utils/assist';\n    import Emitter from '../../mixins/emitter';\n\n    const prefixCls = 'ivu-checkbox';\n\n    export default {\n        name: 'Checkbox',\n        mixins: [ Emitter ],\n        props: {\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: [String, Number, Boolean],\n                default: false\n            },\n            trueValue: {\n                type: [String, Number, Boolean],\n                default: true\n            },\n            falseValue: {\n                type: [String, Number, Boolean],\n                default: false\n            },\n            label: {\n                type: [String, Number, Boolean]\n            },\n            indeterminate: {\n                type: Boolean,\n                default: false\n            },\n            size: {\n                validator (value) {\n                    return oneOf(value, ['small', 'large', 'default']);\n                },\n                default () {\n                    return !this.$IVIEW || this.$IVIEW.size === '' ? 'default' : this.$IVIEW.size;\n                }\n            },\n            name: {\n                type: String\n            }\n        },\n        data () {\n            return {\n                model: [],\n                currentValue: this.value,\n                group: false,\n                showSlot: true,\n                parent: findComponentUpward(this, 'CheckboxGroup'),\n                focusInner: false\n            };\n        },\n        computed: {\n            wrapClasses () {\n                return [\n                    `${prefixCls}-wrapper`,\n                    {\n                        [`${prefixCls}-group-item`]: this.group,\n                        [`${prefixCls}-wrapper-checked`]: this.currentValue,\n                        [`${prefixCls}-wrapper-disabled`]: this.disabled,\n                        [`${prefixCls}-${this.size}`]: !!this.size\n                    }\n                ];\n            },\n            checkboxClasses () {\n                return [\n                    `${prefixCls}`,\n                    {\n                        [`${prefixCls}-checked`]: this.currentValue,\n                        [`${prefixCls}-disabled`]: this.disabled,\n                        [`${prefixCls}-indeterminate`]: this.indeterminate\n                    }\n                ];\n            },\n            innerClasses () {\n                return [\n                    `${prefixCls}-inner`,\n                    {\n                        [`${prefixCls}-focus`]: this.focusInner\n                    }\n                ];\n            },\n            inputClasses () {\n                return `${prefixCls}-input`;\n            }\n        },\n        mounted () {\n            this.parent = findComponentUpward(this, 'CheckboxGroup');\n            if (this.parent) {\n                this.group = true;\n            }\n\n            if (this.group) {\n                this.parent.updateModel(true);\n            } else {\n                this.updateModel();\n                this.showSlot = this.$slots.default !== undefined;\n            }\n        },\n        methods: {\n            change (event) {\n                if (this.disabled) {\n                    return false;\n                }\n\n                const checked = event.target.checked;\n                this.currentValue = checked;\n\n                const value = checked ? this.trueValue : this.falseValue;\n                this.$emit('input', value);\n\n                if (this.group) {\n                    this.parent.change(this.model);\n                } else {\n                    this.$emit('on-change', value);\n                    this.dispatch('FormItem', 'on-form-change', value);\n                }\n            },\n            updateModel () {\n                this.currentValue = this.value === this.trueValue;\n            },\n            onBlur () {\n                this.focusInner = false;\n            },\n            onFocus () {\n                this.focusInner = true;\n            }\n        },\n        watch: {\n            value (val) {\n                if (val === this.trueValue || val === this.falseValue) {\n                    this.updateModel();\n                } else {\n                    throw 'Value should be trueValue or falseValue.';\n                }\n            }\n        }\n    };\n</script>\n"],"sourceRoot":"node_modules/iview/src/components/checkbox"}]}