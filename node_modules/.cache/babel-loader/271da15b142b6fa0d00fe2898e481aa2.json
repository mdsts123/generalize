{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\input\\input.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\input\\input.vue","mtime":1561122214853},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.is-nan\";\nimport _defineProperty from \"E:\\\\TRADE\\\\ThinkPHP\\\\pingzi\\\\Application\\\\Admin\\\\View\\\\TGorder\\\\generalize\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { oneOf, findComponentUpward } from \"../../utils/assist\";\nimport calcTextareaHeight from \"../../utils/calcTextareaHeight\";\nimport Emitter from \"../../mixins/emitter\";\nvar prefixCls = 'ivu-input';\nexport default {\n  name: 'Input',\n  mixins: [Emitter],\n  props: {\n    type: {\n      validator: function validator(value) {\n        return oneOf(value, ['text', 'textarea', 'password', 'url', 'email', 'date', 'number', 'tel']);\n      },\n      default: 'text'\n    },\n    value: {\n      type: [String, Number],\n      default: ''\n    },\n    size: {\n      validator: function validator(value) {\n        return oneOf(value, ['small', 'large', 'default']);\n      },\n      default: function _default() {\n        return !this.$IVIEW || this.$IVIEW.size === '' ? 'default' : this.$IVIEW.size;\n      }\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    maxlength: {\n      type: Number\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    icon: String,\n    autosize: {\n      type: [Boolean, Object],\n      default: false\n    },\n    rows: {\n      type: Number,\n      default: 2\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    name: {\n      type: String\n    },\n    number: {\n      type: Boolean,\n      default: false\n    },\n    autofocus: {\n      type: Boolean,\n      default: false\n    },\n    spellcheck: {\n      type: Boolean,\n      default: false\n    },\n    autocomplete: {\n      type: String,\n      default: 'off'\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    elementId: {\n      type: String\n    },\n    wrap: {\n      validator: function validator(value) {\n        return oneOf(value, ['hard', 'soft']);\n      },\n      default: 'soft'\n    },\n    prefix: {\n      type: String,\n      default: ''\n    },\n    suffix: {\n      type: String,\n      default: ''\n    },\n    search: {\n      type: Boolean,\n      default: false\n    },\n    enterButton: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      currentValue: this.value,\n      prefixCls: prefixCls,\n      prepend: true,\n      append: true,\n      slotReady: false,\n      textareaStyles: {},\n      showPrefix: false,\n      showSuffix: false,\n      isOnComposition: false\n    };\n  },\n  computed: {\n    wrapClasses: function wrapClasses() {\n      var _ref;\n\n      return [\"\".concat(prefixCls, \"-wrapper\"), (_ref = {}, _defineProperty(_ref, \"\".concat(prefixCls, \"-wrapper-\").concat(this.size), !!this.size), _defineProperty(_ref, \"\".concat(prefixCls, \"-type\"), this.type), _defineProperty(_ref, \"\".concat(prefixCls, \"-group\"), this.prepend || this.append || this.search && this.enterButton), _defineProperty(_ref, \"\".concat(prefixCls, \"-group-\").concat(this.size), (this.prepend || this.append || this.search && this.enterButton) && !!this.size), _defineProperty(_ref, \"\".concat(prefixCls, \"-group-with-prepend\"), this.prepend), _defineProperty(_ref, \"\".concat(prefixCls, \"-group-with-append\"), this.append || this.search && this.enterButton), _defineProperty(_ref, \"\".concat(prefixCls, \"-hide-icon\"), this.append), _defineProperty(_ref, \"\".concat(prefixCls, \"-with-search\"), this.search && this.enterButton), _ref)];\n    },\n    inputClasses: function inputClasses() {\n      var _ref2;\n\n      return [\"\".concat(prefixCls), (_ref2 = {}, _defineProperty(_ref2, \"\".concat(prefixCls, \"-\").concat(this.size), !!this.size), _defineProperty(_ref2, \"\".concat(prefixCls, \"-disabled\"), this.disabled), _defineProperty(_ref2, \"\".concat(prefixCls, \"-with-prefix\"), this.showPrefix), _defineProperty(_ref2, \"\".concat(prefixCls, \"-with-suffix\"), this.showSuffix || this.search && this.enterButton === false), _ref2)];\n    },\n    textareaClasses: function textareaClasses() {\n      return [\"\".concat(prefixCls), _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), this.disabled)];\n    }\n  },\n  methods: {\n    handleEnter: function handleEnter(event) {\n      this.$emit('on-enter', event);\n      if (this.search) this.$emit('on-search', this.currentValue);\n    },\n    handleKeydown: function handleKeydown(event) {\n      this.$emit('on-keydown', event);\n    },\n    handleKeypress: function handleKeypress(event) {\n      this.$emit('on-keypress', event);\n    },\n    handleKeyup: function handleKeyup(event) {\n      this.$emit('on-keyup', event);\n    },\n    handleIconClick: function handleIconClick(event) {\n      this.$emit('on-click', event);\n    },\n    handleFocus: function handleFocus(event) {\n      this.$emit('on-focus', event);\n    },\n    handleBlur: function handleBlur(event) {\n      this.$emit('on-blur', event);\n\n      if (!findComponentUpward(this, ['DatePicker', 'TimePicker', 'Cascader', 'Search'])) {\n        this.dispatch('FormItem', 'on-form-blur', this.currentValue);\n      }\n    },\n    handleComposition: function handleComposition(event) {\n      if (event.type === 'compositionstart') {\n        this.isOnComposition = true;\n      }\n\n      if (event.type === 'compositionend') {\n        this.isOnComposition = false;\n        this.handleInput(event);\n      }\n    },\n    handleInput: function handleInput(event) {\n      if (this.isOnComposition) return;\n      var value = event.target.value;\n      if (this.number && value !== '') value = Number.isNaN(Number(value)) ? value : Number(value);\n      this.$emit('input', value);\n      this.setCurrentValue(value);\n      this.$emit('on-change', event);\n    },\n    handleChange: function handleChange(event) {\n      this.$emit('on-input-change', event);\n    },\n    setCurrentValue: function setCurrentValue(value) {\n      var _this = this;\n\n      if (value === this.currentValue) return;\n      this.$nextTick(function () {\n        _this.resizeTextarea();\n      });\n      this.currentValue = value;\n\n      if (!findComponentUpward(this, ['DatePicker', 'TimePicker', 'Cascader', 'Search'])) {\n        this.dispatch('FormItem', 'on-form-change', value);\n      }\n    },\n    resizeTextarea: function resizeTextarea() {\n      var autosize = this.autosize;\n\n      if (!autosize || this.type !== 'textarea') {\n        return false;\n      }\n\n      var minRows = autosize.minRows;\n      var maxRows = autosize.maxRows;\n      this.textareaStyles = calcTextareaHeight(this.$refs.textarea, minRows, maxRows);\n    },\n    focus: function focus() {\n      if (this.type === 'textarea') {\n        this.$refs.textarea.focus();\n      } else {\n        this.$refs.input.focus();\n      }\n    },\n    blur: function blur() {\n      if (this.type === 'textarea') {\n        this.$refs.textarea.blur();\n      } else {\n        this.$refs.input.blur();\n      }\n    },\n    handleClear: function handleClear() {\n      var e = {\n        target: {\n          value: ''\n        }\n      };\n      this.$emit('input', '');\n      this.setCurrentValue('');\n      this.$emit('on-change', e);\n      this.$emit('on-clear');\n    },\n    handleSearch: function handleSearch() {\n      if (this.disabled) return false;\n      this.$refs.input.focus();\n      this.$emit('on-search', this.currentValue);\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.setCurrentValue(val);\n    }\n  },\n  mounted: function mounted() {\n    if (this.type !== 'textarea') {\n      this.prepend = this.$slots.prepend !== undefined;\n      this.append = this.$slots.append !== undefined;\n      this.showPrefix = this.prefix !== '' || this.$slots.prefix !== undefined;\n      this.showSuffix = this.suffix !== '' || this.$slots.suffix !== undefined;\n    } else {\n      this.prepend = false;\n      this.append = false;\n    }\n\n    this.slotReady = true;\n    this.resizeTextarea();\n  }\n};",{"version":3,"sources":["input.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div :class=\"wrapClasses\">\n        <template v-if=\"type !== 'textarea'\">\n            <div :class=\"[prefixCls + '-group-prepend']\" v-if=\"prepend\" v-show=\"slotReady\"><slot name=\"prepend\"></slot></div>\n            <i class=\"ivu-icon\" :class=\"['ivu-icon-ios-close-circle', prefixCls + '-icon', prefixCls + '-icon-clear' , prefixCls + '-icon-normal']\" v-if=\"clearable && currentValue && !disabled\" @click=\"handleClear\"></i>\n            <i class=\"ivu-icon\" :class=\"['ivu-icon-' + icon, prefixCls + '-icon', prefixCls + '-icon-normal']\" v-else-if=\"icon\" @click=\"handleIconClick\"></i>\n            <i class=\"ivu-icon ivu-icon-ios-search\" :class=\"[prefixCls + '-icon', prefixCls + '-icon-normal', prefixCls + '-search-icon']\" v-else-if=\"search && enterButton === false\" @click=\"handleSearch\"></i>\n            <span class=\"ivu-input-suffix\" v-else-if=\"showSuffix\"><slot name=\"suffix\"><i class=\"ivu-icon\" :class=\"['ivu-icon-' + suffix]\" v-if=\"suffix\"></i></slot></span>\n            <transition name=\"fade\">\n                <i class=\"ivu-icon ivu-icon-ios-loading ivu-load-loop\" :class=\"[prefixCls + '-icon', prefixCls + '-icon-validate']\" v-if=\"!icon\"></i>\n            </transition>\n            <input\n                :id=\"elementId\"\n                :autocomplete=\"autocomplete\"\n                :spellcheck=\"spellcheck\"\n                ref=\"input\"\n                :type=\"type\"\n                :class=\"inputClasses\"\n                :placeholder=\"placeholder\"\n                :disabled=\"disabled\"\n                :maxlength=\"maxlength\"\n                :readonly=\"readonly\"\n                :name=\"name\"\n                :value=\"currentValue\"\n                :number=\"number\"\n                :autofocus=\"autofocus\"\n                @keyup.enter=\"handleEnter\"\n                @keyup=\"handleKeyup\"\n                @keypress=\"handleKeypress\"\n                @keydown=\"handleKeydown\"\n                @focus=\"handleFocus\"\n                @blur=\"handleBlur\"\n                @compositionstart=\"handleComposition\"\n                @compositionupdate=\"handleComposition\"\n                @compositionend=\"handleComposition\"\n                @input=\"handleInput\"\n                @change=\"handleChange\">\n            <div :class=\"[prefixCls + '-group-append']\" v-if=\"append\" v-show=\"slotReady\"><slot name=\"append\"></slot></div>\n            <div :class=\"[prefixCls + '-group-append', prefixCls + '-search']\" v-else-if=\"search && enterButton\" @click=\"handleSearch\">\n                <i class=\"ivu-icon ivu-icon-ios-search\" v-if=\"enterButton === true\"></i>\n                <template v-else>{{ enterButton }}</template>\n            </div>\n            <span class=\"ivu-input-prefix\" v-else-if=\"showPrefix\"><slot name=\"prefix\"><i class=\"ivu-icon\" :class=\"['ivu-icon-' + prefix]\" v-if=\"prefix\"></i></slot></span>\n        </template>\n        <textarea\n            v-else\n            :id=\"elementId\"\n            :wrap=\"wrap\"\n            :autocomplete=\"autocomplete\"\n            :spellcheck=\"spellcheck\"\n            ref=\"textarea\"\n            :class=\"textareaClasses\"\n            :style=\"textareaStyles\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            :rows=\"rows\"\n            :maxlength=\"maxlength\"\n            :readonly=\"readonly\"\n            :name=\"name\"\n            :value=\"currentValue\"\n            :autofocus=\"autofocus\"\n            @keyup.enter=\"handleEnter\"\n            @keyup=\"handleKeyup\"\n            @keypress=\"handleKeypress\"\n            @keydown=\"handleKeydown\"\n            @focus=\"handleFocus\"\n            @blur=\"handleBlur\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n            @input=\"handleInput\">\n        </textarea>\n    </div>\n</template>\n<script>\n    import { oneOf, findComponentUpward } from '../../utils/assist';\n    import calcTextareaHeight from '../../utils/calcTextareaHeight';\n    import Emitter from '../../mixins/emitter';\n\n    const prefixCls = 'ivu-input';\n\n    export default {\n        name: 'Input',\n        mixins: [ Emitter ],\n        props: {\n            type: {\n                validator (value) {\n                    return oneOf(value, ['text', 'textarea', 'password', 'url', 'email', 'date', 'number', 'tel']);\n                },\n                default: 'text'\n            },\n            value: {\n                type: [String, Number],\n                default: ''\n            },\n            size: {\n                validator (value) {\n                    return oneOf(value, ['small', 'large', 'default']);\n                },\n                default () {\n                    return !this.$IVIEW || this.$IVIEW.size === '' ? 'default' : this.$IVIEW.size;\n                }\n            },\n            placeholder: {\n                type: String,\n                default: ''\n            },\n            maxlength: {\n                type: Number\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            icon: String,\n            autosize: {\n                type: [Boolean, Object],\n                default: false\n            },\n            rows: {\n                type: Number,\n                default: 2\n            },\n            readonly: {\n                type: Boolean,\n                default: false\n            },\n            name: {\n                type: String\n            },\n            number: {\n                type: Boolean,\n                default: false\n            },\n            autofocus: {\n                type: Boolean,\n                default: false\n            },\n            spellcheck: {\n                type: Boolean,\n                default: false\n            },\n            autocomplete: {\n                type: String,\n                default: 'off'\n            },\n            clearable: {\n                type: Boolean,\n                default: false\n            },\n            elementId: {\n                type: String\n            },\n            wrap: {\n                validator (value) {\n                    return oneOf(value, ['hard', 'soft']);\n                },\n                default: 'soft'\n            },\n            prefix: {\n                type: String,\n                default: ''\n            },\n            suffix: {\n                type: String,\n                default: ''\n            },\n            search: {\n                type: Boolean,\n                default: false\n            },\n            enterButton: {\n                type: [Boolean, String],\n                default: false\n            }\n        },\n        data () {\n            return {\n                currentValue: this.value,\n                prefixCls: prefixCls,\n                prepend: true,\n                append: true,\n                slotReady: false,\n                textareaStyles: {},\n                showPrefix: false,\n                showSuffix: false,\n                isOnComposition: false\n            };\n        },\n        computed: {\n            wrapClasses () {\n                return [\n                    `${prefixCls}-wrapper`,\n                    {\n                        [`${prefixCls}-wrapper-${this.size}`]: !!this.size,\n                        [`${prefixCls}-type`]: this.type,\n                        [`${prefixCls}-group`]: this.prepend || this.append || (this.search && this.enterButton),\n                        [`${prefixCls}-group-${this.size}`]: (this.prepend || this.append || (this.search && this.enterButton)) && !!this.size,\n                        [`${prefixCls}-group-with-prepend`]: this.prepend,\n                        [`${prefixCls}-group-with-append`]: this.append || (this.search && this.enterButton),\n                        [`${prefixCls}-hide-icon`]: this.append,  // #554\n                        [`${prefixCls}-with-search`]: (this.search && this.enterButton)\n                    }\n                ];\n            },\n            inputClasses () {\n                return [\n                    `${prefixCls}`,\n                    {\n                        [`${prefixCls}-${this.size}`]: !!this.size,\n                        [`${prefixCls}-disabled`]: this.disabled,\n                        [`${prefixCls}-with-prefix`]: this.showPrefix,\n                        [`${prefixCls}-with-suffix`]: this.showSuffix || (this.search && this.enterButton === false)\n                    }\n                ];\n            },\n            textareaClasses () {\n                return [\n                    `${prefixCls}`,\n                    {\n                        [`${prefixCls}-disabled`]: this.disabled\n                    }\n                ];\n            }\n        },\n        methods: {\n            handleEnter (event) {\n                this.$emit('on-enter', event);\n                if (this.search) this.$emit('on-search', this.currentValue);\n            },\n            handleKeydown (event) {\n                this.$emit('on-keydown', event);\n            },\n            handleKeypress(event) {\n                this.$emit('on-keypress', event);\n            },\n            handleKeyup (event) {\n                this.$emit('on-keyup', event);\n            },\n            handleIconClick (event) {\n                this.$emit('on-click', event);\n            },\n            handleFocus (event) {\n                this.$emit('on-focus', event);\n            },\n            handleBlur (event) {\n                this.$emit('on-blur', event);\n                if (!findComponentUpward(this, ['DatePicker', 'TimePicker', 'Cascader', 'Search'])) {\n                    this.dispatch('FormItem', 'on-form-blur', this.currentValue);\n                }\n            },\n            handleComposition(event) {\n                if (event.type === 'compositionstart') {\n                    this.isOnComposition = true;\n                }\n                if (event.type === 'compositionend') {\n                    this.isOnComposition = false;\n                    this.handleInput(event);\n                }\n            },\n            handleInput (event) {\n                if (this.isOnComposition) return;\n\n                let value = event.target.value;\n                if (this.number && value !== '') value = Number.isNaN(Number(value)) ? value : Number(value);\n                this.$emit('input', value);\n                this.setCurrentValue(value);\n                this.$emit('on-change', event);\n            },\n            handleChange (event) {\n                this.$emit('on-input-change', event);\n            },\n            setCurrentValue (value) {\n                if (value === this.currentValue) return;\n                this.$nextTick(() => {\n                    this.resizeTextarea();\n                });\n                this.currentValue = value;\n                if (!findComponentUpward(this, ['DatePicker', 'TimePicker', 'Cascader', 'Search'])) {\n                    this.dispatch('FormItem', 'on-form-change', value);\n                }\n            },\n            resizeTextarea () {\n                const autosize = this.autosize;\n                if (!autosize || this.type !== 'textarea') {\n                    return false;\n                }\n\n                const minRows = autosize.minRows;\n                const maxRows = autosize.maxRows;\n\n                this.textareaStyles = calcTextareaHeight(this.$refs.textarea, minRows, maxRows);\n            },\n            focus () {\n                if (this.type === 'textarea') {\n                    this.$refs.textarea.focus();\n                } else {\n                    this.$refs.input.focus();\n                }\n            },\n            blur () {\n                if (this.type === 'textarea') {\n                    this.$refs.textarea.blur();\n                } else {\n                    this.$refs.input.blur();\n                }\n            },\n            handleClear () {\n                const e = { target: { value: '' } };\n                this.$emit('input', '');\n                this.setCurrentValue('');\n                this.$emit('on-change', e);\n                this.$emit('on-clear');\n            },\n            handleSearch () {\n                if (this.disabled) return false;\n                this.$refs.input.focus();\n                this.$emit('on-search', this.currentValue);\n            }\n        },\n        watch: {\n            value (val) {\n                this.setCurrentValue(val);\n            }\n        },\n        mounted () {\n            if (this.type !== 'textarea') {\n                this.prepend = this.$slots.prepend !== undefined;\n                this.append = this.$slots.append !== undefined;\n                this.showPrefix = this.prefix !== '' || this.$slots.prefix !== undefined;\n                this.showSuffix = this.suffix !== '' || this.$slots.suffix !== undefined;\n            } else {\n                this.prepend = false;\n                this.append = false;\n            }\n            this.slotReady = true;\n            this.resizeTextarea();\n        }\n    };\n</script>\n"],"sourceRoot":"node_modules/iview/src/components/input"}]}