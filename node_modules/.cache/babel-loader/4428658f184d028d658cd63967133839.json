{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\icon\\icon.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\icon\\icon.vue","mtime":1561122214853},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["import _defineProperty from \"E:\\\\TRADE\\\\ThinkPHP\\\\pingzi\\\\Application\\\\Admin\\\\View\\\\TGorder\\\\generalize\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\nvar prefixCls = 'ivu-icon';\nexport default {\n  name: 'Icon',\n  props: {\n    type: {\n      type: String,\n      default: ''\n    },\n    size: [Number, String],\n    color: String,\n    custom: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    classes: function classes() {\n      var _ref;\n\n      return [\"\".concat(prefixCls), (_ref = {}, _defineProperty(_ref, \"\".concat(prefixCls, \"-\").concat(this.type), this.type !== ''), _defineProperty(_ref, \"\".concat(this.custom), this.custom !== ''), _ref)];\n    },\n    styles: function styles() {\n      var style = {};\n\n      if (this.size) {\n        style['font-size'] = \"\".concat(this.size, \"px\");\n      }\n\n      if (this.color) {\n        style.color = this.color;\n      }\n\n      return style;\n    }\n  },\n  methods: {\n    handleClick: function handleClick(event) {\n      this.$emit('click', event);\n    }\n  }\n};",{"version":3,"sources":["icon.vue"],"names":[],"mappings":";;;;;AAIA,IAAA,SAAA,GAAA,UAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CALA;AAMA,IAAA,KAAA,EAAA,MANA;AAOA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAPA,GAFA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,aAAA,WACA,SADA,+CAGA,SAHA,cAGA,KAAA,IAHA,GAGA,KAAA,IAAA,KAAA,EAHA,mCAIA,KAAA,MAJA,GAIA,KAAA,MAAA,KAAA,EAJA,SAAA;AAOA,KATA;AAUA,IAAA,MAVA,oBAUA;AACA,UAAA,KAAA,GAAA,EAAA;;AAEA,UAAA,KAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,WAAA,CAAA,aAAA,KAAA,IAAA;AACA;;AAEA,UAAA,KAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,KAAA,KAAA;AACA;;AAEA,aAAA,KAAA;AACA;AAtBA,GAdA;AAsCA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA;AAHA;AAtCA,CAAA","sourcesContent":["<template>\n    <i :class=\"classes\" :style=\"styles\" @click=\"handleClick\"></i>\n</template>\n<script>\n    const prefixCls = 'ivu-icon';\n\n    export default {\n        name: 'Icon',\n        props: {\n            type: {\n                type: String,\n                default: ''\n            },\n            size: [Number, String],\n            color: String,\n            custom: {\n                type: String,\n                default: ''\n            }\n        },\n        computed: {\n            classes () {\n                return [\n                    `${prefixCls}`,\n                    {\n                        [`${prefixCls}-${this.type}`]: this.type !== '',\n                        [`${this.custom}`]: this.custom !== '',\n                    }\n                ];\n            },\n            styles () {\n                let style = {};\n\n                if (this.size) {\n                    style['font-size'] = `${this.size}px`;\n                }\n\n                if (this.color) {\n                    style.color = this.color;\n                }\n\n                return style;\n            }\n        },\n        methods: {\n            handleClick (event) {\n                this.$emit('click', event);\n            }\n        }\n    };\n</script>\n"],"sourceRoot":"node_modules/iview/src/components/icon"}]}