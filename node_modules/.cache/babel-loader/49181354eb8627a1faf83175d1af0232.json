{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\modal\\modal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\modal\\modal.vue","mtime":1561122214853},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport _defineProperty from \"E:\\\\TRADE\\\\ThinkPHP\\\\pingzi\\\\Application\\\\Admin\\\\View\\\\TGorder\\\\generalize\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Icon from \"../icon\";\nimport iButton from \"../button/button.vue\";\nimport TransferDom from \"../../directives/transfer-dom\";\nimport Locale from \"../../mixins/locale\";\nimport Emitter from \"../../mixins/emitter\";\nimport ScrollbarMixins from \"./mixins-scrollbar\";\nimport { on, off } from \"../../utils/dom\";\nimport { findComponentsDownward } from \"../../utils/assist\";\nimport { transferIndex as modalIndex, transferIncrease as modalIncrease } from \"../../utils/transfer-queue\";\nvar prefixCls = 'ivu-modal';\nexport default {\n  name: 'Modal',\n  mixins: [Locale, Emitter, ScrollbarMixins],\n  components: {\n    Icon: Icon,\n    iButton: iButton\n  },\n  directives: {\n    TransferDom: TransferDom\n  },\n  props: {\n    value: {\n      type: Boolean,\n      default: false\n    },\n    closable: {\n      type: Boolean,\n      default: true\n    },\n    maskClosable: {\n      type: Boolean,\n      default: function _default() {\n        return !this.$IVIEW || this.$IVIEW.modal.maskClosable === '' ? true : this.$IVIEW.modal.maskClosable;\n      }\n    },\n    title: {\n      type: String\n    },\n    width: {\n      type: [Number, String],\n      default: 520\n    },\n    okText: {\n      type: String\n    },\n    cancelText: {\n      type: String\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    styles: {\n      type: Object\n    },\n    className: {\n      type: String\n    },\n    // for instance\n    footerHide: {\n      type: Boolean,\n      default: false\n    },\n    scrollable: {\n      type: Boolean,\n      default: false\n    },\n    transitionNames: {\n      type: Array,\n      default: function _default() {\n        return ['ease', 'fade'];\n      }\n    },\n    transfer: {\n      type: Boolean,\n      default: function _default() {\n        return !this.$IVIEW || this.$IVIEW.transfer === '' ? true : this.$IVIEW.transfer;\n      }\n    },\n    fullscreen: {\n      type: Boolean,\n      default: false\n    },\n    mask: {\n      type: Boolean,\n      default: true\n    },\n    draggable: {\n      type: Boolean,\n      default: false\n    },\n    zIndex: {\n      type: Number,\n      default: 1000\n    }\n  },\n  data: function data() {\n    return {\n      prefixCls: prefixCls,\n      wrapShow: false,\n      showHead: true,\n      buttonLoading: false,\n      visible: this.value,\n      dragData: {\n        x: null,\n        y: null,\n        dragX: null,\n        dragY: null,\n        dragging: false\n      },\n      modalIndex: this.handleGetModalIndex(),\n      // for Esc close the top modal\n      isMouseTriggerIn: false // #5800\n\n    };\n  },\n  computed: {\n    wrapClasses: function wrapClasses() {\n      var _ref;\n\n      return [\"\".concat(prefixCls, \"-wrap\"), (_ref = {}, _defineProperty(_ref, \"\".concat(prefixCls, \"-hidden\"), !this.wrapShow), _defineProperty(_ref, \"\".concat(this.className), !!this.className), _defineProperty(_ref, \"\".concat(prefixCls, \"-no-mask\"), !this.showMask), _ref)];\n    },\n    wrapStyles: function wrapStyles() {\n      return {\n        zIndex: this.modalIndex + this.zIndex\n      };\n    },\n    maskClasses: function maskClasses() {\n      return \"\".concat(prefixCls, \"-mask\");\n    },\n    classes: function classes() {\n      var _ref2;\n\n      return [\"\".concat(prefixCls), (_ref2 = {}, _defineProperty(_ref2, \"\".concat(prefixCls, \"-fullscreen\"), this.fullscreen), _defineProperty(_ref2, \"\".concat(prefixCls, \"-fullscreen-no-header\"), this.fullscreen && !this.showHead), _defineProperty(_ref2, \"\".concat(prefixCls, \"-fullscreen-no-footer\"), this.fullscreen && this.footerHide), _ref2)];\n    },\n    contentClasses: function contentClasses() {\n      var _ref3;\n\n      return [\"\".concat(prefixCls, \"-content\"), (_ref3 = {}, _defineProperty(_ref3, \"\".concat(prefixCls, \"-content-no-mask\"), !this.showMask), _defineProperty(_ref3, \"\".concat(prefixCls, \"-content-drag\"), this.draggable), _defineProperty(_ref3, \"\".concat(prefixCls, \"-content-dragging\"), this.draggable && this.dragData.dragging), _ref3)];\n    },\n    mainStyles: function mainStyles() {\n      var style = {};\n      var width = parseInt(this.width);\n      var styleWidth = this.dragData.x !== null ? {\n        top: 0\n      } : {\n        width: width <= 100 ? \"\".concat(width, \"%\") : \"\".concat(width, \"px\")\n      };\n      var customStyle = this.styles ? this.styles : {};\n      Object.assign(style, styleWidth, customStyle);\n      return style;\n    },\n    contentStyles: function contentStyles() {\n      var style = {};\n\n      if (this.draggable) {\n        if (this.dragData.x !== null) style.left = \"\".concat(this.dragData.x, \"px\");\n        if (this.dragData.y !== null) style.top = \"\".concat(this.dragData.y, \"px\");\n        var width = parseInt(this.width);\n        var styleWidth = {\n          width: width <= 100 ? \"\".concat(width, \"%\") : \"\".concat(width, \"px\")\n        };\n        Object.assign(style, styleWidth);\n      }\n\n      return style;\n    },\n    localeOkText: function localeOkText() {\n      if (this.okText === undefined) {\n        return this.t('i.modal.okText');\n      } else {\n        return this.okText;\n      }\n    },\n    localeCancelText: function localeCancelText() {\n      if (this.cancelText === undefined) {\n        return this.t('i.modal.cancelText');\n      } else {\n        return this.cancelText;\n      }\n    },\n    showMask: function showMask() {\n      return this.draggable ? false : this.mask;\n    }\n  },\n  methods: {\n    close: function close() {\n      this.visible = false;\n      this.$emit('input', false);\n      this.$emit('on-cancel');\n    },\n    handleMask: function handleMask() {\n      if (this.maskClosable && this.showMask) {\n        this.close();\n      }\n    },\n    handleWrapClick: function handleWrapClick(event) {\n      if (this.isMouseTriggerIn) {\n        this.isMouseTriggerIn = false;\n        return;\n      } // use indexOf,do not use === ,because ivu-modal-wrap can have other custom className\n\n\n      var className = event.target.getAttribute('class');\n      if (className && className.indexOf(\"\".concat(prefixCls, \"-wrap\")) > -1) this.handleMask();\n    },\n    handleMousedown: function handleMousedown() {\n      this.isMouseTriggerIn = true;\n    },\n    cancel: function cancel() {\n      this.close();\n    },\n    ok: function ok() {\n      if (this.loading) {\n        this.buttonLoading = true;\n      } else {\n        this.visible = false;\n        this.$emit('input', false);\n      }\n\n      this.$emit('on-ok');\n    },\n    EscClose: function EscClose(e) {\n      if (this.visible && this.closable) {\n        if (e.keyCode === 27) {\n          var $Modals = findComponentsDownward(this.$root, 'Modal').filter(function (item) {\n            return item.$data.visible && item.$props.closable;\n          });\n          var $TopModal = $Modals.sort(function (a, b) {\n            return a.$data.modalIndex < b.$data.modalIndex ? 1 : -1;\n          })[0];\n          setTimeout(function () {\n            $TopModal.close();\n          }, 0);\n        }\n      }\n    },\n    animationFinish: function animationFinish() {\n      this.$emit('on-hidden');\n    },\n    handleMoveStart: function handleMoveStart(event) {\n      if (!this.draggable) return false;\n      var $content = this.$refs.content;\n      var rect = $content.getBoundingClientRect();\n      this.dragData.x = rect.x || rect.left;\n      this.dragData.y = rect.y || rect.top;\n      var distance = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      this.dragData.dragX = distance.x;\n      this.dragData.dragY = distance.y;\n      this.dragData.dragging = true;\n      on(window, 'mousemove', this.handleMoveMove);\n      on(window, 'mouseup', this.handleMoveEnd);\n    },\n    handleMoveMove: function handleMoveMove(event) {\n      if (!this.dragData.dragging) return false;\n      var distance = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var diff_distance = {\n        x: distance.x - this.dragData.dragX,\n        y: distance.y - this.dragData.dragY\n      };\n      this.dragData.x += diff_distance.x;\n      this.dragData.y += diff_distance.y;\n      this.dragData.dragX = distance.x;\n      this.dragData.dragY = distance.y;\n    },\n    handleMoveEnd: function handleMoveEnd() {\n      this.dragData.dragging = false;\n      off(window, 'mousemove', this.handleMoveMove);\n      off(window, 'mouseup', this.handleMoveEnd);\n    },\n    handleGetModalIndex: function handleGetModalIndex() {\n      modalIncrease();\n      return modalIndex;\n    },\n    handleClickModal: function handleClickModal() {\n      if (this.draggable) {\n        this.modalIndex = this.handleGetModalIndex();\n      }\n    }\n  },\n  mounted: function mounted() {\n    if (this.visible) {\n      this.wrapShow = true;\n    }\n\n    var showHead = true;\n\n    if (this.$slots.header === undefined && !this.title) {\n      showHead = false;\n    }\n\n    this.showHead = showHead; // ESC close\n\n    document.addEventListener('keydown', this.EscClose);\n  },\n  beforeDestroy: function beforeDestroy() {\n    document.removeEventListener('keydown', this.EscClose);\n    this.removeScrollEffect();\n  },\n  watch: {\n    value: function value(val) {\n      this.visible = val;\n    },\n    visible: function visible(val) {\n      var _this = this;\n\n      if (val === false) {\n        this.buttonLoading = false;\n        this.timer = setTimeout(function () {\n          _this.wrapShow = false;\n\n          _this.removeScrollEffect();\n        }, 300);\n      } else {\n        this.modalIndex = this.handleGetModalIndex();\n        if (this.timer) clearTimeout(this.timer);\n        this.wrapShow = true;\n\n        if (!this.scrollable) {\n          this.addScrollEffect();\n        }\n      }\n\n      this.broadcast('Table', 'on-visible-change', val);\n      this.broadcast('Slider', 'on-visible-change', val); // #2852\n\n      this.$emit('on-visible-change', val);\n    },\n    loading: function loading(val) {\n      if (!val) {\n        this.buttonLoading = false;\n      }\n    },\n    scrollable: function scrollable(val) {\n      if (!val) {\n        this.addScrollEffect();\n      } else {\n        this.removeScrollEffect();\n      }\n    },\n    title: function title(val) {\n      if (this.$slots.header === undefined) {\n        this.showHead = !!val;\n      }\n    }\n  }\n};",{"version":3,"sources":["modal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div v-transfer-dom :data-transfer=\"transfer\">\n        <transition :name=\"transitionNames[1]\">\n            <div :class=\"maskClasses\" :style=\"wrapStyles\" v-show=\"visible\" v-if=\"showMask\" @click=\"handleMask\"></div>\n        </transition>\n        <div :class=\"wrapClasses\" :style=\"wrapStyles\" @click=\"handleWrapClick\">\n            <transition :name=\"transitionNames[0]\" @after-leave=\"animationFinish\">\n                <div :class=\"classes\" :style=\"mainStyles\" v-show=\"visible\" @mousedown=\"handleMousedown\">\n                    <div :class=\"contentClasses\" ref=\"content\" :style=\"contentStyles\" @click=\"handleClickModal\">\n                        <a :class=\"[prefixCls + '-close']\" v-if=\"closable\" @click=\"close\">\n                            <slot name=\"close\">\n                                <Icon type=\"ios-close\"></Icon>\n                            </slot>\n                        </a>\n                        <div :class=\"[prefixCls + '-header']\"\n                             @mousedown=\"handleMoveStart\"\n                             v-if=\"showHead\"\n                        ><slot name=\"header\"><div :class=\"[prefixCls + '-header-inner']\">{{ title }}</div></slot></div>\n                        <div :class=\"[prefixCls + '-body']\"><slot></slot></div>\n                        <div :class=\"[prefixCls + '-footer']\" v-if=\"!footerHide\">\n                            <slot name=\"footer\">\n                                <i-button type=\"text\" size=\"large\" @click.native=\"cancel\">{{ localeCancelText }}</i-button>\n                                <i-button type=\"primary\" size=\"large\" :loading=\"buttonLoading\" @click.native=\"ok\">{{ localeOkText }}</i-button>\n                            </slot>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n<script>\n    import Icon from '../icon';\n    import iButton from '../button/button.vue';\n    import TransferDom from '../../directives/transfer-dom';\n    import Locale from '../../mixins/locale';\n    import Emitter from '../../mixins/emitter';\n    import ScrollbarMixins from './mixins-scrollbar';\n\n    import { on, off } from '../../utils/dom';\n    import { findComponentsDownward } from '../../utils/assist';\n\n    import { transferIndex as modalIndex, transferIncrease as modalIncrease } from '../../utils/transfer-queue';\n\n    const prefixCls = 'ivu-modal';\n\n    export default {\n        name: 'Modal',\n        mixins: [ Locale, Emitter, ScrollbarMixins ],\n        components: { Icon, iButton },\n        directives: { TransferDom },\n        props: {\n            value: {\n                type: Boolean,\n                default: false\n            },\n            closable: {\n                type: Boolean,\n                default: true\n            },\n            maskClosable: {\n                type: Boolean,\n                default () {\n                    return !this.$IVIEW || this.$IVIEW.modal.maskClosable === '' ? true : this.$IVIEW.modal.maskClosable;\n                }\n            },\n            title: {\n                type: String\n            },\n            width: {\n                type: [Number, String],\n                default: 520\n            },\n            okText: {\n                type: String\n            },\n            cancelText: {\n                type: String\n            },\n            loading: {\n                type: Boolean,\n                default: false\n            },\n            styles: {\n                type: Object\n            },\n            className: {\n                type: String\n            },\n            // for instance\n            footerHide: {\n                type: Boolean,\n                default: false\n            },\n            scrollable: {\n                type: Boolean,\n                default: false\n            },\n            transitionNames: {\n                type: Array,\n                default () {\n                    return ['ease', 'fade'];\n                }\n            },\n            transfer: {\n                type: Boolean,\n                default () {\n                    return !this.$IVIEW || this.$IVIEW.transfer === '' ? true : this.$IVIEW.transfer;\n                }\n            },\n            fullscreen: {\n                type: Boolean,\n                default: false\n            },\n            mask: {\n                type: Boolean,\n                default: true\n            },\n            draggable: {\n                type: Boolean,\n                default: false\n            },\n            zIndex: {\n                type: Number,\n                default: 1000\n            },\n        },\n        data () {\n            return {\n                prefixCls: prefixCls,\n                wrapShow: false,\n                showHead: true,\n                buttonLoading: false,\n                visible: this.value,\n                dragData: {\n                    x: null,\n                    y: null,\n                    dragX: null,\n                    dragY: null,\n                    dragging: false\n                },\n                modalIndex: this.handleGetModalIndex(),  // for Esc close the top modal\n                isMouseTriggerIn: false, // #5800\n            };\n        },\n        computed: {\n            wrapClasses () {\n                return [\n                    `${prefixCls}-wrap`,\n                    {\n                        [`${prefixCls}-hidden`]: !this.wrapShow,\n                        [`${this.className}`]: !!this.className,\n                        [`${prefixCls}-no-mask`]: !this.showMask\n                    }\n                ];\n            },\n            wrapStyles () {\n                return {\n                    zIndex: this.modalIndex + this.zIndex\n                };\n            },\n            maskClasses () {\n                return `${prefixCls}-mask`;\n            },\n            classes () {\n                return [\n                    `${prefixCls}`,\n                    {\n                        [`${prefixCls}-fullscreen`]: this.fullscreen,\n                        [`${prefixCls}-fullscreen-no-header`]: this.fullscreen && !this.showHead,\n                        [`${prefixCls}-fullscreen-no-footer`]: this.fullscreen && this.footerHide\n                    }\n                ];\n            },\n            contentClasses () {\n                return [\n                    `${prefixCls}-content`,\n                    {\n                        [`${prefixCls}-content-no-mask`]: !this.showMask,\n                        [`${prefixCls}-content-drag`]: this.draggable,\n                        [`${prefixCls}-content-dragging`]: this.draggable && this.dragData.dragging\n                    }\n                ];\n            },\n            mainStyles () {\n                let style = {};\n\n                const width = parseInt(this.width);\n                const styleWidth = this.dragData.x !== null ? {\n                    top: 0\n                } : {\n                    width: width <= 100 ? `${width}%` : `${width}px`\n                };\n\n                const customStyle = this.styles ? this.styles : {};\n\n                Object.assign(style, styleWidth, customStyle);\n\n                return style;\n            },\n            contentStyles () {\n                let style = {};\n\n                if (this.draggable) {\n                    if (this.dragData.x !== null) style.left = `${this.dragData.x}px`;\n                    if (this.dragData.y !== null) style.top = `${this.dragData.y}px`;\n                    const width = parseInt(this.width);\n                    const styleWidth = {\n                        width: width <= 100 ? `${width}%` : `${width}px`\n                    };\n\n                    Object.assign(style, styleWidth);\n                }\n\n                return style;\n            },\n            localeOkText () {\n                if (this.okText === undefined) {\n                    return this.t('i.modal.okText');\n                } else {\n                    return this.okText;\n                }\n            },\n            localeCancelText () {\n                if (this.cancelText === undefined) {\n                    return this.t('i.modal.cancelText');\n                } else {\n                    return this.cancelText;\n                }\n            },\n            showMask () {\n                return this.draggable ? false : this.mask;\n            }\n        },\n        methods: {\n            close () {\n                this.visible = false;\n                this.$emit('input', false);\n                this.$emit('on-cancel');\n            },\n            handleMask () {\n                if (this.maskClosable && this.showMask) {\n                    this.close();\n                }\n            },\n            handleWrapClick (event) {\n                if (this.isMouseTriggerIn) {\n                    this.isMouseTriggerIn = false;\n                    return;\n                }\n                // use indexOf,do not use === ,because ivu-modal-wrap can have other custom className\n                const className = event.target.getAttribute('class');\n                if (className && className.indexOf(`${prefixCls}-wrap`) > -1) this.handleMask();\n            },\n            handleMousedown () {\n                this.isMouseTriggerIn = true;\n            },\n            cancel () {\n                this.close();\n            },\n            ok () {\n                if (this.loading) {\n                    this.buttonLoading = true;\n                } else {\n                    this.visible = false;\n                    this.$emit('input', false);\n                }\n                this.$emit('on-ok');\n            },\n            EscClose (e) {\n                if (this.visible && this.closable) {\n                    if (e.keyCode === 27) {\n                        const $Modals = findComponentsDownward(this.$root, 'Modal').filter(item => item.$data.visible && item.$props.closable);\n\n                        const $TopModal = $Modals.sort((a, b) => {\n                            return a.$data.modalIndex < b.$data.modalIndex ? 1 : -1;\n                        })[0];\n\n                        setTimeout(() => {\n                            $TopModal.close();\n                        }, 0);\n                    }\n                }\n            },\n            animationFinish() {\n                this.$emit('on-hidden');\n            },\n            handleMoveStart (event) {\n                if (!this.draggable) return false;\n\n                const $content = this.$refs.content;\n                const rect = $content.getBoundingClientRect();\n                this.dragData.x = rect.x || rect.left;\n                this.dragData.y = rect.y || rect.top;\n\n                const distance = {\n                    x: event.clientX,\n                    y: event.clientY\n                };\n\n                this.dragData.dragX = distance.x;\n                this.dragData.dragY = distance.y;\n\n                this.dragData.dragging = true;\n\n                on(window, 'mousemove', this.handleMoveMove);\n                on(window, 'mouseup', this.handleMoveEnd);\n            },\n            handleMoveMove (event) {\n                if (!this.dragData.dragging) return false;\n\n                const distance = {\n                    x: event.clientX,\n                    y: event.clientY\n                };\n\n                const diff_distance = {\n                    x: distance.x - this.dragData.dragX,\n                    y: distance.y - this.dragData.dragY\n                };\n\n                this.dragData.x += diff_distance.x;\n                this.dragData.y += diff_distance.y;\n\n                this.dragData.dragX = distance.x;\n                this.dragData.dragY = distance.y;\n            },\n            handleMoveEnd () {\n                this.dragData.dragging = false;\n                off(window, 'mousemove', this.handleMoveMove);\n                off(window, 'mouseup', this.handleMoveEnd);\n            },\n            handleGetModalIndex () {\n                modalIncrease();\n                return modalIndex;\n            },\n            handleClickModal () {\n                if (this.draggable) {\n                    this.modalIndex = this.handleGetModalIndex();\n                }\n            }\n        },\n        mounted () {\n            if (this.visible) {\n                this.wrapShow = true;\n            }\n\n            let showHead = true;\n\n            if (this.$slots.header === undefined && !this.title) {\n                showHead = false;\n            }\n\n            this.showHead = showHead;\n\n            // ESC close\n            document.addEventListener('keydown', this.EscClose);\n        },\n        beforeDestroy () {\n            document.removeEventListener('keydown', this.EscClose);\n            this.removeScrollEffect();\n        },\n        watch: {\n            value (val) {\n                this.visible = val;\n            },\n            visible (val) {\n                if (val === false) {\n                    this.buttonLoading = false;\n                    this.timer = setTimeout(() => {\n                        this.wrapShow = false;\n                        this.removeScrollEffect();\n                    }, 300);\n                } else {\n                    this.modalIndex = this.handleGetModalIndex();\n\n                    if (this.timer) clearTimeout(this.timer);\n                    this.wrapShow = true;\n                    if (!this.scrollable) {\n                        this.addScrollEffect();\n                    }\n                }\n                this.broadcast('Table', 'on-visible-change', val);\n                this.broadcast('Slider', 'on-visible-change', val);  // #2852\n                this.$emit('on-visible-change', val);\n            },\n            loading (val) {\n                if (!val) {\n                    this.buttonLoading = false;\n                }\n            },\n            scrollable (val) {\n                if (!val) {\n                    this.addScrollEffect();\n                } else {\n                    this.removeScrollEffect();\n                }\n            },\n            title (val) {\n                if (this.$slots.header === undefined) {\n                    this.showHead = !!val;\n                }\n            }\n        }\n    };\n</script>\n"],"sourceRoot":"node_modules/iview/src/components/modal"}]}