{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\store\\modules\\permission.js","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\store\\modules\\permission.js","mtime":1561555840966},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport { asyncRouterMap, constantRouterMap } from '@/router';\n/**\r\n * 通过meta.role判断是否与当前用户权限匹配\r\n * @param roles\r\n * @param route\r\n */\n\nfunction hasPermission(roles, route) {\n  if (route.meta && route.meta.role) {\n    return roles.some(function (role) {\n      return route.meta.role.indexOf(role) >= 0;\n    });\n  } else {\n    return true;\n  }\n}\n/**\r\n * 递归过滤异步路由表，返回符合用户角色权限的路由表\r\n * @param asyncRouterMap\r\n * @param roles\r\n */\n\n\nfunction filterAsyncRouter(asyncRouterMap, roles) {\n  var accessedRouters = asyncRouterMap.filter(function (route) {\n    if (hasPermission(roles, route)) {\n      if (route.children && route.children.length) {\n        route.children = filterAsyncRouter(route.children, roles);\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return accessedRouters;\n}\n\nfunction getNowRouter(asyncRouterMap, to) {\n  return asyncRouterMap.some(function (route) {\n    if (to.path.indexOf(route.path) !== -1) {\n      return true;\n    } else if (route.children && route.children.length) {\n      //如果有孩子就遍历孩子\n      return getNowRouter(route.children, to);\n    }\n  });\n}\n\nvar permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: [],\n    siderbar_routers: []\n  },\n  mutations: {\n    SET_ROUTERS: function SET_ROUTERS(state, routers) {\n      state.addRouters = routers;\n      state.routers = constantRouterMap.concat(routers); // state.routers.forEach(function(e){\n      //     if(e.name===\"首页\"){\n      //     state.siderbar_routers=e;\n      //     }\n      // })\n    },\n    SET_NOW_ROUTERS: function SET_NOW_ROUTERS(state, to) {\n      // 递归访问 accessedRouters，找到包含to 的那个路由对象，设置给siderbar_routers\n      console.log(state.addRouters);\n      state.addRouters.forEach(function (e) {\n        if (e.children && e.children.length) {\n          if (getNowRouter(e.children, to) === true) state.siderbar_routers = e;\n        }\n      });\n    }\n  },\n  actions: {\n    GenerateRoutes: function GenerateRoutes(_ref, data) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve) {\n        var roles = data.roles;\n        var accessedRouters;\n\n        if (roles.indexOf('admin') >= 0) {\n          accessedRouters = asyncRouterMap;\n        } else {\n          accessedRouters = filterAsyncRouter(asyncRouterMap, roles);\n        }\n\n        commit('SET_ROUTERS', accessedRouters);\n        resolve();\n      });\n    },\n    getNowRoutes: function getNowRoutes(_ref2, data) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve) {\n        //data => to\n        commit('SET_NOW_ROUTERS', data);\n        resolve();\n      });\n    }\n  }\n};\nexport default permission;",{"version":3,"sources":["E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\store\\modules\\permission.js"],"names":["asyncRouterMap","constantRouterMap","hasPermission","roles","route","meta","role","some","indexOf","filterAsyncRouter","accessedRouters","filter","children","length","getNowRouter","to","path","permission","state","routers","addRouters","siderbar_routers","mutations","SET_ROUTERS","concat","SET_NOW_ROUTERS","console","log","forEach","e","actions","GenerateRoutes","data","commit","Promise","resolve","getNowRoutes"],"mappings":"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","sourcesContent":["import { asyncRouterMap, constantRouterMap } from '@/router';\r\n\r\n/**\r\n * 通过meta.role判断是否与当前用户权限匹配\r\n * @param roles\r\n * @param route\r\n */\r\nfunction hasPermission(roles, route) {\r\n  if (route.meta && route.meta.role) {\r\n    return roles.some(role => route.meta.role.indexOf(role) >= 0);\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * 递归过滤异步路由表，返回符合用户角色权限的路由表\r\n * @param asyncRouterMap\r\n * @param roles\r\n */\r\nfunction filterAsyncRouter(asyncRouterMap, roles) {\r\n  const accessedRouters = asyncRouterMap.filter(route => {\r\n    if (hasPermission(roles, route)) {\r\n      if (route.children && route.children.length) {\r\n        route.children = filterAsyncRouter(route.children, roles);\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n  return accessedRouters;\r\n}\r\n\r\nfunction getNowRouter(asyncRouterMap, to) {\r\n  return asyncRouterMap.some(route => {\r\n    if (to.path.indexOf(route.path) !== -1) {\r\n      return true;\r\n    } else if (route.children && route.children.length) {\r\n      //如果有孩子就遍历孩子\r\n      return getNowRouter(route.children, to);\r\n    }\r\n  });\r\n}\r\n\r\nconst permission = {\r\n  state: {\r\n    routers: constantRouterMap,\r\n    addRouters: [],\r\n    siderbar_routers: [],\r\n  },\r\n  mutations: {\r\n    SET_ROUTERS: (state, routers) => {\r\n      state.addRouters = routers;\r\n      state.routers = constantRouterMap.concat(routers);\r\n      // state.routers.forEach(function(e){\r\n      //     if(e.name===\"首页\"){\r\n      //     state.siderbar_routers=e;\r\n\r\n      //     }\r\n\r\n      // })\r\n    },\r\n    SET_NOW_ROUTERS: (state, to) => {\r\n      // 递归访问 accessedRouters，找到包含to 的那个路由对象，设置给siderbar_routers\r\n      console.log(state.addRouters);\r\n      state.addRouters.forEach(e => {\r\n        if (e.children && e.children.length) {\r\n          if (getNowRouter(e.children, to) === true) state.siderbar_routers = e;\r\n        }\r\n      });\r\n    },\r\n  },\r\n  actions: {\r\n    GenerateRoutes({ commit }, data) {\r\n      return new Promise(resolve => {\r\n        const { roles } = data;\r\n        let accessedRouters;\r\n        if (roles.indexOf('admin') >= 0) {\r\n          accessedRouters = asyncRouterMap;\r\n        } else {\r\n          accessedRouters = filterAsyncRouter(asyncRouterMap, roles);\r\n        }\r\n\r\n        commit('SET_ROUTERS', accessedRouters);\r\n        resolve();\r\n      });\r\n    },\r\n\r\n    getNowRoutes({ commit }, data) {\r\n      return new Promise(resolve => {\r\n        //data => to\r\n        commit('SET_NOW_ROUTERS', data);\r\n        resolve();\r\n      });\r\n    },\r\n  },\r\n};\r\n\r\nexport default permission;\r\n"]}]}