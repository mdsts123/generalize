{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\store\\modules\\user.js","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\store\\modules\\user.js","mtime":1561556576364},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport { loginByEmail, logout, getInfo } from '@/api/login';\nimport Cookies from 'js-cookie';\nvar user = {\n  state: {\n    user: '',\n    status: '',\n    email: '',\n    code: '',\n    uid: undefined,\n    auth_type: '',\n    token: Cookies.get('Admin-Token'),\n    name: '',\n    avatar: '',\n    introduction: '',\n    roles: [],\n    setting: {\n      articlePlatform: []\n    }\n  },\n  mutations: {\n    SET_AUTH_TYPE: function SET_AUTH_TYPE(state, type) {\n      state.auth_type = type;\n    },\n    SET_CODE: function SET_CODE(state, code) {\n      state.code = code;\n    },\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_UID: function SET_UID(state, uid) {\n      state.uid = uid;\n    },\n    SET_EMAIL: function SET_EMAIL(state, email) {\n      state.email = email;\n    },\n    SET_INTRODUCTION: function SET_INTRODUCTION(state, introduction) {\n      state.introduction = introduction;\n    },\n    SET_SETTING: function SET_SETTING(state, setting) {\n      state.setting = setting;\n    },\n    SET_STATUS: function SET_STATUS(state, status) {\n      state.status = status;\n    },\n    SET_NAME: function SET_NAME(state, name) {\n      state.name = name;\n    },\n    SET_AVATAR: function SET_AVATAR(state, avatar) {\n      state.avatar = avatar;\n    },\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    },\n    LOGIN_SUCCESS: function LOGIN_SUCCESS() {\n      console.log('login success');\n    },\n    LOGOUT_USER: function LOGOUT_USER(state) {\n      state.user = '';\n    }\n  },\n  actions: {\n    // 邮箱登录\n    LoginByEmail: function LoginByEmail(_ref, userInfo) {\n      var commit = _ref.commit;\n      var email = userInfo.email.trim();\n      return new Promise(function (resolve, reject) {\n        loginByEmail(email, userInfo.password).then(function (response) {\n          var data = response.data;\n          Cookies.set('Admin-Token', response.data.token);\n          commit('SET_TOKEN', data.token);\n          commit('SET_EMAIL', email);\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 获取用户信息\n    GetInfo: function GetInfo(_ref2) {\n      var commit = _ref2.commit,\n          state = _ref2.state;\n      return new Promise(function (resolve, reject) {\n        getInfo(state.token).then(function (response) {\n          var data = response.data;\n          commit('SET_ROLES', data.role);\n          commit('SET_NAME', data.name);\n          commit('SET_AVATAR', data.avatar);\n          commit('SET_UID', data.uid);\n          commit('SET_INTRODUCTION', data.introduction);\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 第三方验证登录\n    LoginByThirdparty: function LoginByThirdparty(_ref3, code) {\n      var commit = _ref3.commit,\n          state = _ref3.state;\n      return new Promise(function (resolve, reject) {\n        commit('SET_CODE', code);\n        loginByThirdparty(state.status, state.email, state.code, state.auth_type).then(function (response) {\n          commit('SET_TOKEN', response.data.token);\n          Cookies.set('Admin-Token', response.data.token);\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 登出\n    LogOut: function LogOut(_ref4) {\n      var commit = _ref4.commit,\n          state = _ref4.state;\n      return new Promise(function (resolve, reject) {\n        logout(state.token).then(function () {\n          commit('SET_TOKEN', '');\n          commit('SET_ROLES', []);\n          Cookies.remove('Admin-Token');\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 前端 登出\n    FedLogOut: function FedLogOut(_ref5) {\n      var commit = _ref5.commit;\n      return new Promise(function (resolve) {\n        commit('SET_TOKEN', '');\n        Cookies.remove('Admin-Token');\n        alert(\"has logout\");\n        resolve();\n      });\n    },\n    // 动态修改权限\n    ChangeRole: function ChangeRole(_ref6, role) {\n      var commit = _ref6.commit;\n      return new Promise(function (resolve) {\n        commit('SET_ROLES', [role]);\n        commit('SET_TOKEN', role);\n        Cookies.set('Admin-Token', role);\n        resolve();\n      });\n    }\n  }\n};\nexport default user;",{"version":3,"sources":["E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\store\\modules\\user.js"],"names":["loginByEmail","logout","getInfo","Cookies","user","state","status","email","code","uid","undefined","auth_type","token","get","name","avatar","introduction","roles","setting","articlePlatform","mutations","SET_AUTH_TYPE","type","SET_CODE","SET_TOKEN","SET_UID","SET_EMAIL","SET_INTRODUCTION","SET_SETTING","SET_STATUS","SET_NAME","SET_AVATAR","SET_ROLES","LOGIN_SUCCESS","console","log","LOGOUT_USER","actions","LoginByEmail","userInfo","commit","trim","Promise","resolve","reject","password","then","response","data","set","catch","error","GetInfo","role","LoginByThirdparty","loginByThirdparty","LogOut","remove","FedLogOut","alert","ChangeRole"],"mappings":"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","sourcesContent":["import { loginByEmail, logout, getInfo } from '@/api/login';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst user = {\r\n  state: {\r\n    user: '',\r\n    status: '',\r\n    email: '',\r\n    code: '',\r\n    uid: undefined,\r\n    auth_type: '',\r\n    token: Cookies.get('Admin-Token'),\r\n    name: '',\r\n    avatar: '',\r\n    introduction: '',\r\n    roles: [],\r\n    setting: {\r\n      articlePlatform: []\r\n    }\r\n  },\r\n\r\n  mutations: {\r\n    SET_AUTH_TYPE: (state, type) => {\r\n      state.auth_type = type;\r\n    },\r\n    SET_CODE: (state, code) => {\r\n      state.code = code;\r\n    },\r\n    SET_TOKEN: (state, token) => {\r\n      state.token = token;\r\n    },\r\n    SET_UID: (state, uid) => {\r\n      state.uid = uid;\r\n    },\r\n    SET_EMAIL: (state, email) => {\r\n      state.email = email;\r\n    },\r\n    SET_INTRODUCTION: (state, introduction) => {\r\n      state.introduction = introduction;\r\n    },\r\n    SET_SETTING: (state, setting) => {\r\n      state.setting = setting;\r\n    },\r\n    SET_STATUS: (state, status) => {\r\n      state.status = status;\r\n    },\r\n    SET_NAME: (state, name) => {\r\n      state.name = name;\r\n    },\r\n    SET_AVATAR: (state, avatar) => {\r\n      state.avatar = avatar;\r\n    },\r\n    SET_ROLES: (state, roles) => {\r\n      state.roles = roles;\r\n    },\r\n    LOGIN_SUCCESS: () => {\r\n      console.log('login success')\r\n    },\r\n    LOGOUT_USER: state => {\r\n      state.user = '';\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    // 邮箱登录\r\n    LoginByEmail({ commit }, userInfo) {\r\n      const email = userInfo.email.trim();\r\n      return new Promise((resolve, reject) => {\r\n        loginByEmail(email, userInfo.password).then(response => {\r\n          const data = response.data;\r\n          Cookies.set('Admin-Token', response.data.token);\r\n          commit('SET_TOKEN', data.token);\r\n          commit('SET_EMAIL', email);\r\n          resolve();\r\n        }).catch(error => {\r\n          reject(error);\r\n        });\r\n      });\r\n    },\r\n\r\n\r\n    // 获取用户信息\r\n    GetInfo({ commit, state }) {\r\n\r\n\r\n      return new Promise((resolve, reject) => {\r\n        getInfo(state.token).then(response => {\r\n          const data = response.data;\r\n          commit('SET_ROLES', data.role);\r\n          commit('SET_NAME', data.name);\r\n          commit('SET_AVATAR', data.avatar);\r\n          commit('SET_UID', data.uid);\r\n          commit('SET_INTRODUCTION', data.introduction);\r\n          resolve(response);\r\n        }).catch(error => {\r\n          reject(error);\r\n        });\r\n      });\r\n    },\r\n\r\n    // 第三方验证登录\r\n    LoginByThirdparty({ commit, state }, code) {\r\n      return new Promise((resolve, reject) => {\r\n        commit('SET_CODE', code);\r\n        loginByThirdparty(state.status, state.email, state.code, state.auth_type).then(response => {\r\n          commit('SET_TOKEN', response.data.token);\r\n          Cookies.set('Admin-Token', response.data.token);\r\n          resolve();\r\n        }).catch(error => {\r\n          reject(error);\r\n        });\r\n      });\r\n    },\r\n\r\n\r\n    // 登出\r\n    LogOut({ commit, state }) {\r\n      return new Promise((resolve, reject) => {\r\n        logout(state.token).then(() => {\r\n          commit('SET_TOKEN', '');\r\n          commit('SET_ROLES', []);\r\n          Cookies.remove('Admin-Token');\r\n          resolve();\r\n        }).catch(error => {\r\n          reject(error);\r\n        });\r\n      });\r\n    },\r\n\r\n    // 前端 登出\r\n    FedLogOut({ commit }) {\r\n      return new Promise(resolve => {\r\n        commit('SET_TOKEN', '');\r\n        Cookies.remove('Admin-Token');\r\n        alert(\"has logout\");\r\n        resolve();\r\n      });\r\n    },\r\n\r\n    // 动态修改权限\r\n    ChangeRole({ commit }, role) {\r\n      return new Promise(resolve => {\r\n        commit('SET_ROLES', [role]);\r\n        commit('SET_TOKEN', role);\r\n        Cookies.set('Admin-Token', role);\r\n        resolve();\r\n      })\r\n    }\r\n  }\r\n};\r\n\r\nexport default user;\r\n"]}]}