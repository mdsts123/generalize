{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\spin\\spin.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\spin\\spin.vue","mtime":1561122214853},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["import _defineProperty from \"E:\\\\TRADE\\\\ThinkPHP\\\\pingzi\\\\Application\\\\Admin\\\\View\\\\TGorder\\\\generalize\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { oneOf } from \"../../utils/assist\";\nimport ScrollbarMixins from \"../modal/mixins-scrollbar\";\nvar prefixCls = 'ivu-spin';\nexport default {\n  name: 'Spin',\n  mixins: [ScrollbarMixins],\n  props: {\n    size: {\n      validator: function validator(value) {\n        return oneOf(value, ['small', 'large', 'default']);\n      },\n      default: function _default() {\n        return !this.$IVIEW || this.$IVIEW.size === '' ? 'default' : this.$IVIEW.size;\n      }\n    },\n    fix: {\n      type: Boolean,\n      default: false\n    },\n    fullscreen: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      showText: false,\n      // used for $Spin\n      visible: false\n    };\n  },\n  computed: {\n    classes: function classes() {\n      var _ref;\n\n      return [\"\".concat(prefixCls), (_ref = {}, _defineProperty(_ref, \"\".concat(prefixCls, \"-\").concat(this.size), !!this.size), _defineProperty(_ref, \"\".concat(prefixCls, \"-fix\"), this.fix), _defineProperty(_ref, \"\".concat(prefixCls, \"-show-text\"), this.showText), _defineProperty(_ref, \"\".concat(prefixCls, \"-fullscreen\"), this.fullscreen), _ref)];\n    },\n    mainClasses: function mainClasses() {\n      return \"\".concat(prefixCls, \"-main\");\n    },\n    dotClasses: function dotClasses() {\n      return \"\".concat(prefixCls, \"-dot\");\n    },\n    textClasses: function textClasses() {\n      return \"\".concat(prefixCls, \"-text\");\n    },\n    fullscreenVisible: function fullscreenVisible() {\n      if (this.fullscreen) {\n        return this.visible;\n      } else {\n        return true;\n      }\n    }\n  },\n  watch: {\n    visible: function visible(val) {\n      if (val) {\n        this.addScrollEffect();\n      } else {\n        this.removeScrollEffect();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.showText = this.$slots.default !== undefined;\n  }\n};",{"version":3,"sources":["spin.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA,SAAA,KAAA;AACA,OAAA,eAAA;AAEA,IAAA,SAAA,GAAA,UAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,MAAA,EAAA,CAAA,eAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,SADA,qBACA,KADA,EACA;AACA,eAAA,KAAA,CAAA,KAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,SAAA,CAAA,CAAA;AACA,OAHA;AAIA,MAAA,OAJA,sBAIA;AACA,eAAA,CAAA,KAAA,MAAA,IAAA,KAAA,MAAA,CAAA,IAAA,KAAA,EAAA,GAAA,SAAA,GAAA,KAAA,MAAA,CAAA,IAAA;AACA;AANA,KADA;AASA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAbA,GAHA;AAqBA,EAAA,IArBA,kBAqBA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA;AACA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GA3BA;AA4BA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,aAAA,WACA,SADA,+CAGA,SAHA,cAGA,KAAA,IAHA,GAGA,CAAA,CAAA,KAAA,IAHA,mCAIA,SAJA,WAIA,KAAA,GAJA,mCAKA,SALA,iBAKA,KAAA,QALA,mCAMA,SANA,kBAMA,KAAA,UANA,SAAA;AASA,KAXA;AAYA,IAAA,WAZA,yBAYA;AACA,uBAAA,SAAA;AACA,KAdA;AAeA,IAAA,UAfA,wBAeA;AACA,uBAAA,SAAA;AACA,KAjBA;AAkBA,IAAA,WAlBA,yBAkBA;AACA,uBAAA,SAAA;AACA,KApBA;AAqBA,IAAA,iBArBA,+BAqBA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,eAAA,KAAA,OAAA;AACA,OAFA,MAEA;AACA,eAAA,IAAA;AACA;AACA;AA3BA,GA5BA;AAyDA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,mBACA,GADA,EACA;AACA,UAAA,GAAA,EAAA;AACA,aAAA,eAAA;AACA,OAFA,MAEA;AACA,aAAA,kBAAA;AACA;AACA;AAPA,GAzDA;AAkEA,EAAA,OAlEA,qBAkEA;AACA,SAAA,QAAA,GAAA,KAAA,MAAA,CAAA,OAAA,KAAA,SAAA;AACA;AApEA,CAAA","sourcesContent":["<template>\n    <transition name=\"fade\">\n        <div :class=\"classes\" v-if=\"fullscreenVisible\">\n            <div :class=\"mainClasses\">\n                <span :class=\"dotClasses\"></span>\n                <div :class=\"textClasses\"><slot></slot></div>\n            </div>\n        </div>\n    </transition>\n</template>\n<script>\n    import { oneOf } from '../../utils/assist';\n    import ScrollbarMixins from '../modal/mixins-scrollbar';\n\n    const prefixCls = 'ivu-spin';\n\n    export default {\n        name: 'Spin',\n        mixins: [ ScrollbarMixins ],\n        props: {\n            size: {\n                validator (value) {\n                    return oneOf(value, ['small', 'large', 'default']);\n                },\n                default () {\n                    return !this.$IVIEW || this.$IVIEW.size === '' ? 'default' : this.$IVIEW.size;\n                }\n            },\n            fix: {\n                type: Boolean,\n                default: false\n            },\n            fullscreen: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data () {\n            return {\n                showText: false,\n                // used for $Spin\n                visible: false\n            };\n        },\n        computed: {\n            classes () {\n                return [\n                    `${prefixCls}`,\n                    {\n                        [`${prefixCls}-${this.size}`]: !!this.size,\n                        [`${prefixCls}-fix`]: this.fix,\n                        [`${prefixCls}-show-text`]: this.showText,\n                        [`${prefixCls}-fullscreen`]: this.fullscreen\n                    }\n                ];\n            },\n            mainClasses () {\n                return `${prefixCls}-main`;\n            },\n            dotClasses () {\n                return `${prefixCls}-dot`;\n            },\n            textClasses () {\n                return `${prefixCls}-text`;\n            },\n            fullscreenVisible () {\n                if (this.fullscreen) {\n                    return this.visible;\n                } else {\n                    return true;\n                }\n            }\n        },\n        watch: {\n            visible (val) {\n                if (val) {\n                    this.addScrollEffect();\n                } else {\n                    this.removeScrollEffect();\n                }\n            }\n        },\n        mounted () {\n            this.showText = this.$slots.default !== undefined;\n        }\n    };\n</script>\n"],"sourceRoot":"node_modules/iview/src/components/spin"}]}