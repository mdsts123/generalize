{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\login.js","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\login.js","mtime":1561557479110},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822}],"contextDependencies":[],"result":["import _objectSpread from \"E:\\\\TRADE\\\\ThinkPHP\\\\pingzi\\\\Application\\\\Admin\\\\View\\\\TGorder\\\\generalize\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport vue from 'vue';\nimport NProgress from 'nprogress'; // Progress 进度条\n\nimport 'nprogress/nprogress.css'; // Progress 进度条样式\n// permissiom judge\n\nfunction hasPermission(roles, permissionRoles) {\n  if (roles.indexOf('admin') >= 0) return true; // admin权限 直接通过\n\n  if (!permissionRoles) return true;\n  return roles.some(function (role) {\n    return permissionRoles.indexOf(role) >= 0;\n  });\n} // register global progress.\n\n\nvar whiteList = ['/login', '/authredirect']; // 不重定向白名单\n\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start(); // 开启Progress\n\n  if (store.getters.token) {\n    // 判断是否有token\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n    } else {\n      if (store.getters.roles.length === 0) {\n        // 判断当前用户是否已拉取完user_info信息\n        store.dispatch('GetInfo').then(function (res) {\n          // 拉取user_info\n          var roles = res.data.role;\n          store.dispatch('GenerateRoutes', {\n            roles: roles\n          }).then(function () {\n            // 生成可访问的路由表\n            router.addRoutes(store.getters.addRouters); // 动态添加可访问路由表\n\n            next(_objectSpread({}, to)); // hack方法 确保addRoutes已完成\n          });\n        }).catch(function () {\n          store.dispatch('FedLogOut').then(function () {\n            next({\n              path: '/login'\n            });\n          });\n        });\n      } else {\n        store.dispatch('getNowRoutes', to);\n\n        if (hasPermission(store.getters.roles, to.meta.role)) {\n          next(); //\n        } else {\n          next({\n            path: '/',\n            query: {\n              noGoBack: true\n            }\n          });\n        }\n      }\n    }\n  } else {\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next('/login'); // 否则全部重定向到登录页\n\n      NProgress.done(); // 在hash模式下 改变手动改变hash 重定向回来 不会触发afterEach 暂时hack方案 ps：history模式下无问题，可删除该行！\n    }\n  }\n});\nrouter.afterEach(function () {\n  NProgress.done(); // 结束Progress\n});",{"version":3,"sources":["E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\login.js"],"names":["router","store","vue","NProgress","hasPermission","roles","permissionRoles","indexOf","some","role","whiteList","beforeEach","to","from","next","start","getters","token","path","length","dispatch","then","res","data","addRoutes","addRouters","catch","meta","query","noGoBack","done","afterEach"],"mappings":"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","sourcesContent":["import router from './router'\r\nimport store from './store'\r\nimport vue from 'vue'\r\nimport NProgress from 'nprogress' // Progress 进度条\r\nimport 'nprogress/nprogress.css'// Progress 进度条样式\r\n\r\n// permissiom judge\r\nfunction hasPermission(roles, permissionRoles) {\r\n  if (roles.indexOf('admin') >= 0) return true // admin权限 直接通过\r\n  if (!permissionRoles) return true\r\n  return roles.some(role => permissionRoles.indexOf(role) >= 0)\r\n}\r\n\r\n// register global progress.\r\nconst whiteList = ['/login', '/authredirect']// 不重定向白名单\r\nrouter.beforeEach((to, from, next) => {\r\n\r\n\r\n  NProgress.start() // 开启Progress\r\n  if (store.getters.token) { // 判断是否有token\r\n    if (to.path === '/login') {\r\n      next({ path: '/' })\r\n    } else {\r\n\r\n      if (store.getters.roles.length === 0) { // 判断当前用户是否已拉取完user_info信息\r\n        store.dispatch('GetInfo').then(res => { // 拉取user_info\r\n          const roles = res.data.role\r\n\r\n          store.dispatch('GenerateRoutes', { roles }).then(() => { // 生成可访问的路由表\r\n            router.addRoutes(store.getters.addRouters) // 动态添加可访问路由表\r\n            next({ ...to }) // hack方法 确保addRoutes已完成\r\n          })\r\n\r\n        }).catch(() => {\r\n          store.dispatch('FedLogOut').then(() => {\r\n            next({ path: '/login' })\r\n          })\r\n        })\r\n      } else {\r\n\r\n        store.dispatch('getNowRoutes', to);\r\n\r\n        if (hasPermission(store.getters.roles, to.meta.role)) {\r\n          next()//\r\n        } else {\r\n          next({ path: '/', query: { noGoBack: true }})\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if (whiteList.indexOf(to.path) !== -1) { // 在免登录白名单，直接进入\r\n      next()\r\n    } else {\r\n      next('/login') // 否则全部重定向到登录页\r\n      NProgress.done() // 在hash模式下 改变手动改变hash 重定向回来 不会触发afterEach 暂时hack方案 ps：history模式下无问题，可删除该行！\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n  NProgress.done() // 结束Progress\r\n})\r\n"]}]}