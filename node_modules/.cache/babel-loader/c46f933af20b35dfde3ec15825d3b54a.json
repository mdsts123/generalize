{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\views\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\views\\Table.vue","mtime":1561113286120},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport expandRow from \"./table-expand.vue\";\nvar vue;\nvar uploader;\n\nfunction getVideoName(video_name) {\n  var video_name = '';\n  var img_ext_list = [\".jpg\", \".png\", \".jpeg\"];\n  img_ext_list.forEach(function (e) {\n    if (video_name.indexOf(e) !== -1) {\n      var point_index = video_name.indexOf(e);\n      var leaf_index = video_name.lastIndexOf('/', point_index);\n      var line_index = video_name.lastIndexOf('_', point_index);\n      video_name = video_name.substring(line_index + 1);\n      return video_name;\n    }\n  });\n  var video_ext_list = [\".mp4\"];\n  video_ext_list.forEach(function (e) {\n    if (video_name.indexOf(e) !== -1) {\n      var point_index = video_name.indexOf(e);\n      var leaf_index = video_name.lastIndexOf('/', point_index);\n      var line_index = video_name.lastIndexOf('_', point_index);\n      video_name = video_name.substring(line_index + 1);\n      return video_name;\n    }\n  });\n  return video_name;\n}\n\n;\n\nfunction getVideoDuration(video_duration_before) {\n  var video_duration = parseInt(video_duration_before);\n\n  if (video_duration <= 60) {\n    if (video_duration < 10) video_duration = \"00:00:0\" + video_duration;else video_duration = \"00:00:\" + video_duration;\n  } else if (video_duration > 60 && video_duration <= 60 * 60) {\n    var minute = Math.floor(video_duration / 60);\n    var s = Math.floor(video_duration % 60);\n    if (minute < 10) video_duration = \"00:0\" + minute;else video_duration = \"00:\" + minute;\n    if (s < 10) video_duration = video_duration + \":0\" + s;else video_duration = video_duration + \":\" + s;\n  } else if (video_duration > 60 * 60 && video_duration < 60 * 60 * 60) {\n    var hour = Math.floor(video_duration / 3600);\n\n    var _minute = Math.floor(video_duration % 3600 / 60);\n\n    var _s = Math.floor(video_duration % 3600 % 60);\n\n    if (hour < 10) video_duration = \"0\" + hour;else video_duration = hour + '';\n    if (_minute < 10) video_duration = video_duration + \":0\" + _minute;else video_duration = video_duration + \":\" + _minute;\n    if (_s < 10) video_duration = video_duration + \":0\" + _s;else video_duration = video_duration + \":\" + _s;\n  }\n\n  return video_duration;\n}\n\nfunction getVideoSize(video_size) {\n  if (video_size < 1024) video_size = Math.round(video_size * 100) / 100 + \" B\";else if (video_size >= 1024 && video_size < 1024 * 1024) video_size = Math.round(video_size / 1024 * 100) / 100 + \" Kb\";else if (video_size >= 1024 * 1024 && video_size < 1024 * 1024 * 1024) video_size = Math.round(video_size / (1024 * 1024) * 100) / 100 + \" Mb\";\n  return video_size;\n}\n\nfunction qiniuInit(vue) {\n  uploader = Qiniu.uploader({\n    runtimes: 'html5,flash,html4',\n    // 上传模式，依次退化\n    browse_button: 'pickfiles',\n    // 上传选择的点选按钮，必需\n    uptoken_func: function uptoken_func() {// 在需要获取uptoken时，该方法会被调用\n      // return \"123\"; \n    },\n    get_new_uptoken: false,\n    // 设置上传文件的时候是否每次都重新获取新的uptoken\n    // downtoken_url: '/downtoken',\n    // Ajax请求downToken的Url，私有空间时使用，JS-SDK将向该地址POST文件的key和domain，服务端返回的JSON必须包含url字段，url值为该文件的下载地址\n    unique_names: false,\n    // 默认false，key为文件名。若开启该选项，JS-SDK会为每个文件自动生成key（文件名）\n    save_key: false,\n    // 默认false。若在服务端生成uptoken的上传策略中指定了sava_key，则开启，SDK在前端将不对key进行任何处理\n    domain: 'http://qiniu-plupload.qiniudn.com/',\n    // bucket域名，下载资源时用到，必需\n    container: 'container',\n    // 上传区域DOM ID，默认是browser_button的父元素\n    max_file_size: '1024mb',\n    // 最大文件体积限制\n    flash_swf_url: 'static/bower_components/plupload/js/Moxie.swf',\n    //引入flash，相对路径\n    max_retries: 0,\n    // 上传失败最大重试次数\n    dragdrop: true,\n    // 开启可拖曳上传\n    drop_element: 'container',\n    // 拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传\n    chunk_size: '10mb',\n    // 分块上传时，每块的体积\n    auto_start: true,\n    // 选择文件后自动上传，若关闭需要自己绑定事件触发上传\n    multi_selection: true,\n    filters: {\n      max_file_size: '1000mb',\n      prevent_duplicates: false,\n      // Specify what files to browse for\n      mime_types: [{\n        title: \"Video files\",\n        extensions: \"mp4\"\n      }, // 限定flv,mpg,mpeg,avi,wmv,mov,asf,rm,rmvb,mkv,m4v,mp4后缀格式上传\n      {\n        title: \"Image files\",\n        extensions: \"jpg,png,jpeg\"\n      }]\n    },\n    init: {\n      'FilesAdded': function FilesAdded(up, files) {\n        plupload.each(files, function (file) {\n          vue.progresshow = true;\n        });\n      },\n      'BeforeUpload': function BeforeUpload(up, file) {\n        vue.progresscount = 10;\n        vue.progresstatus = \"active\";\n        vue.progressspeed = \"1.5 Mb/s\";\n        var interval = setInterval(function () {\n          if (vue.progresscount === 40) {\n            clearInterval(interval);\n            vue.$Notice.success({\n              title: '上传成功'\n            });\n            setTimeout(function () {\n              vue.progressspeed = 0;\n              vue.progresstatus = \"wrong\";\n              vue.$Message.error('上传失败');\n              setTimeout(function () {\n                vue.progresscount = 0;\n                vue.progresshow = false;\n                var obj = {\n                  task_status: 0,\n                  timestamp: \"2017-08-10 17:03:54\",\n                  video_duration: \"11.121667\",\n                  video_size: 1732410,\n                  video_name: \"http://otl6ypoog.bkt.clouddn.com/Objectstoarge/videos/2017-08-10/33337_p.mp4\"\n                };\n                vue.video_list.push(obj);\n                vue.setInitPage(1);\n              }, 4000);\n            }, 1000);\n          } else {\n            vue.progresscount += 2;\n          }\n        }, 100);\n      },\n      'UploadProgress': function UploadProgress(up, file) {},\n      'FileUploaded': function FileUploaded(up, file, info) {},\n      'Error': function Error(up, err, errTip) {//上传出错时，处理相关的事情\n      },\n      'UploadComplete': function UploadComplete() {//队列文件处理完毕后，处理相关的事情\n      },\n      'Key': function Key(up, file) {// return key\n      }\n    }\n  });\n}\n\nexport default {\n  components: {\n    expandRow: expandRow\n  },\n  name: 'buttons',\n  data: function data() {\n    var _this = this;\n\n    return {\n      progresshow: false,\n      progresscount: 0,\n      progresstatus: 'active',\n      progressspeed: 0,\n      video_list: [{\n        task_status: 0,\n        timestamp: \"2017-08-10 17:03:54\",\n        video_duration: \"11s\",\n        video_size: 1732410,\n        video_name: \"p.mp4\"\n      }, {\n        task_status: 1,\n        timestamp: \"2017-08-10 17:03:54\",\n        video_duration: \"11s\",\n        video_size: 1732410,\n        video_name: \"p.mp4\"\n      }, {\n        task_status: 1,\n        timestamp: \"2017-08-10 17:03:54\",\n        video_duration: \"11s\",\n        video_size: 1732410,\n        video_name: \"p.mp4\"\n      }, {\n        task_status: 0,\n        timestamp: \"2017-08-10 17:03:54\",\n        video_duration: \"11s\",\n        video_size: 1732410,\n        video_name: \"p.mp4\"\n      }, {\n        task_status: 1,\n        timestamp: \"2017-08-10 17:03:54\",\n        video_duration: \"11s\",\n        video_size: 1732410,\n        video_name: \"p.mp4\"\n      }, {\n        task_status: 0,\n        timestamp: \"2017-08-10 17:03:54\",\n        video_duration: \"11s\",\n        video_size: 1732410,\n        video_name: \"p.mp4\"\n      }],\n      pageindex: 1,\n      page_video_list: [],\n      lodding: false,\n      list_loadding: false,\n      columns7: [{\n        type: 'expand',\n        width: \"30\",\n        ellipsis: 'true',\n        render: function render(h, params) {\n          return h(expandRow, {\n            props: {\n              row: params.row\n            }\n          });\n        }\n      }, {\n        title: '视频名称',\n        key: 'video_name',\n        ellipsis: 'true'\n      }, {\n        title: '上传时间',\n        ellipsis: 'true',\n        key: 'timestamp'\n      }, {\n        title: '时长',\n        ellipsis: 'true',\n        key: 'video_duration'\n      }, {\n        title: '大小',\n        ellipsis: 'true',\n        key: 'video_size',\n        filters: [{\n          label: '大于10M',\n          value: 1\n        }, {\n          label: '小于10M',\n          value: 2\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value === 1) {\n            return row.video_size > 1024 * 1024 * 1024 * 10;\n          } else if (value === 2) {\n            return row.video_size < 1024 * 1024 * 10;\n          }\n        }\n      }, {\n        title: '状态',\n        ellipsis: 'true',\n        filters: [{\n          label: '处理完成',\n          value: 1\n        }, {\n          label: '正在处理',\n          value: 2\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value === 1) {\n            return row.task_status === 1;\n          } else if (value === 2) {\n            return row.task_status === 0;\n          }\n        },\n        render: function render(h, params) {\n          var task_status = parseInt(params.row.task_status);\n          if (task_status === 0) return h('div', [h('Tag', {\n            props: {\n              type: 'dot',\n              color: \"blue\"\n            }\n          }, \"正在处理\")]);else if (task_status === 1) return h('div', [h('Tag', {\n            props: {\n              type: 'dot',\n              color: \"green\"\n            }\n          }, \"处理完成\")]);\n        }\n      }, {\n        title: '操作',\n        key: 'action',\n        align: 'center',\n        ellipsis: 'true',\n        render: function render(h, params) {\n          var task_status = parseInt(params.row.task_status);\n\n          if (task_status === 0) {\n            return h('div', [h('Tooltip', {\n              props: {\n                content: '还未分析完成，暂时不能查看'\n              }\n            }, [h('Button', {\n              props: {\n                type: 'primary',\n                size: 'small',\n                loading: true\n              },\n              style: {\n                marginRight: '5px'\n              }\n            }, '处理中')]), h('Button', {\n              props: {\n                type: 'error',\n                size: 'small',\n                disabled: true\n              },\n              on: {\n                click: function click() {\n                  _this.remove(params.index);\n                }\n              }\n            }, '删除')]);\n          } else if (task_status === 1) {\n            return h('div', [h('Button', {\n              props: {\n                type: 'primary',\n                size: 'small'\n              },\n              style: {\n                marginRight: '5px'\n              },\n              on: {\n                click: function click() {\n                  _this.$router.push({\n                    path: '/tabledetail/' + ((_this.pageindex - 1) * 10 + params.index)\n                  });\n                }\n              }\n            }, '查看结果'), h('Button', {\n              props: {\n                type: 'error',\n                size: 'small'\n              },\n              on: {\n                click: function click() {\n                  _this.remove(params.index);\n                }\n              }\n            }, '删除')]);\n          }\n        } //render\n\n      }] //cloumn\n      //return\n\n    };\n  },\n  //data\n  methods: {\n    remove: function remove(index) {\n      this.video_list.splice(index, 1);\n    },\n    qiniu_upload: function qiniu_upload() {\n      uploader.start();\n    },\n    setInitPage: function setInitPage(page) {\n      this.page_video_list = [];\n      this.pageindex = page;\n      var video_list = this.video_list;\n\n      for (var i = (page - 1) * 10; i < (page - 1) * 10 + 10; i++) {\n        if (i < video_list.length) {\n          this.page_video_list.push(this.video_list[i]);\n        }\n      }\n    },\n    exportData: function exportData(type) {\n      if (type === 1) {\n        this.$refs.table.exportCsv({\n          filename: '原始数据',\n          columns: this.columns7,\n          data: this.video_list\n        });\n      } else if (type === 2) {\n        this.$refs.table.exportCsv({\n          filename: '排序和过滤后的数据',\n          original: false\n        });\n      }\n    }\n  },\n  mounted: function mounted() {\n    var vue = this;\n    this.list_loadding = true;\n    setTimeout(function () {\n      vue.list_loadding = false;\n    }, 2000);\n    qiniuInit(vue); //初始化七牛数据\n\n    this.setInitPage(1);\n  }\n};",{"version":3,"sources":["Table.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\">\r\n\r\n          <Row>\r\n        <Col :md=\"24\" >\r\n           \r\n\r\n\r\n\r\n<div >\r\n\r\n\r\n        <div id=\"container\" style=\"margin-bottom:10px;\">\r\n\r\n\r\n   <Button type=\"primary\" size=\"large\"  icon=\"ios-cloud-upload-outline\" id='pickfiles' @click=\"qiniu_upload\" style=\"padding-bottom:5px;\">上传文件</Button>\r\n         <Progress :percent=\"progresscount\" :status=\"progresstatus\" style=\"width=90%;vertical-align:middle\" v-if=\"progresshow\">\r\n                <Icon type=\"checkmark-circled\" v-if=\"progresscount==100\"></Icon>\r\n                <span v-if=\"progresscount===100\">上传成功</span>\r\n                <Icon type=\"close-circled\" v-if=\"progresstatus==='wrong'\"></Icon>\r\n                <span v-if=\"progresstatus==='wrong'\">上传失败</span>\r\n                <span style=\"position:absolute;left:50%;top:-5px;\" v-if=\"progresscount!==0&&progresscount!=100\">{{progressspeed}}</span>\r\n              </Progress>\r\n        </div>\r\n           \r\n            <div style=\"position:relative;\">\r\n              \r\n          \r\n                \r\n                 <Table  :columns=\"columns7\" :data=\"page_video_list\" ref=\"table\"></Table>\r\n\r\n                  <div style=\"position:absolute;top:0px;width:100%;height:100%;display: flex;\r\n                            align-items: center;\r\n                            justify-content: center;background: rgba(210, 216, 222, 0.5);\" v-if=\"list_loadding\">\r\n                   <Spin size=\"large\"></Spin>\r\n                   <h6 style=\"color:#2d8cf0;margin-top:10px;\">正在获取数据...</h6>\r\n                </div>\r\n            </div>\r\n\r\n                   <Page :total=\"this.video_list.length\" show-total @on-change=\"setInitPage\" style=\"text-align:right;margin-top:50px\"></Page>\r\n\r\n   <Button type=\"primary\" size=\"large\" @click=\"exportData(1)\"><Icon type=\"ios-download-outline\"></Icon> 导出原始数据</Button>\r\n    <Button type=\"primary\" size=\"large\" @click=\"exportData(2)\"><Icon type=\"ios-download-outline\"></Icon> 导出排序和过滤后的数据</Button>\r\n</div>\r\n            <div style=\"\" class=\"doc-content\">\r\n                <h5>表格综合实例</h5>\r\n\r\n        <p>轻松完成业务需求，再也不用被产品催了</p>\r\n            </div>\r\n             \r\n        </Col>\r\n\r\n\r\n        <Col :md=\"12\">\r\n           \r\n \r\n\r\n\r\n        </Col>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </Row> \r\n\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\n   import expandRow from './table-expand.vue';\r\n\r\n var vue;\r\n var uploader;\r\n  function getVideoName(video_name){\r\n      var video_name='';\r\n      var img_ext_list=[\".jpg\",\".png\",\".jpeg\"];\r\n      img_ext_list.forEach(function(e){\r\n          if(video_name.indexOf(e)!==-1)\r\n          {\r\n            let point_index=video_name.indexOf(e);\r\n          let leaf_index=video_name.lastIndexOf('/',point_index);\r\n           let line_index=video_name.lastIndexOf('_',point_index);\r\n             video_name=video_name.substring(line_index+1);\r\n           return video_name;\r\n\r\n          }\r\n      });\r\n\r\n\r\n        var video_ext_list=[\".mp4\"];\r\n    video_ext_list.forEach(function(e){\r\n        if(video_name.indexOf(e)!==-1)\r\n        {\r\n          let point_index=video_name.indexOf(e);\r\n        let leaf_index=video_name.lastIndexOf('/',point_index);\r\n          let line_index=video_name.lastIndexOf('_',point_index);\r\n           video_name=video_name.substring(line_index+1);\r\n           return video_name;\r\n        }\r\n    });\r\n           return video_name;\r\n\r\n  };\r\n\r\n  function getVideoDuration(video_duration_before){\r\n   let video_duration=parseInt(video_duration_before);\r\n              if(video_duration<=60){\r\n                if(video_duration<10)\r\n                  video_duration=\"00:00:0\"+video_duration;\r\n                else\r\n                  video_duration=\"00:00:\"+video_duration;\r\n\r\n              }\r\n              else if(video_duration>60&&video_duration<=60*60){\r\n                  const minute=Math.floor(video_duration/60);\r\n                  const s=Math.floor(video_duration%60);\r\n                  if(minute<10)\r\n                    video_duration=\"00:0\"+minute;\r\n                  else \r\n                    video_duration=\"00:\"+minute;\r\n\r\n                  \r\n                  if(s<10)\r\n                  video_duration=video_duration+\":0\"+s;\r\n\r\n                else\r\n                  video_duration=video_duration+\":\"+s;\r\n\r\n              }\r\n              else if (video_duration>60*60&&video_duration<60*60*60){\r\n                  const hour=Math.floor(video_duration/3600);\r\n                 \r\n                  const minute=Math.floor((video_duration%3600)/60);\r\n                    const s=Math.floor((video_duration%3600)%60);\r\n                   if(hour<10)\r\n                    video_duration=\"0\"+hour;\r\n                  else\r\n                    video_duration=hour+'';\r\n\r\n                   if(minute<10)\r\n                    video_duration=video_duration+\":0\"+minute;\r\n                  else \r\n                    video_duration=video_duration+\":\"+minute;\r\n                \r\n                   if(s<10)\r\n                    video_duration=video_duration+\":0\"+s;\r\n                  else \r\n                    video_duration=video_duration+\":\"+s;\r\n\r\n\r\n              }\r\n\r\n            return video_duration;\r\n  }\r\n  function getVideoSize(video_size){\r\n                      if(video_size<1024)\r\n                                  video_size=Math.round(video_size*100)/100+\" B\";\r\n                             else  if(video_size>=1024&&video_size<1024*1024)\r\n                                  video_size=Math.round(video_size/1024*100)/100+\" Kb\";\r\n                            else if(video_size>=1024*1024&&video_size<1024*1024*1024)\r\n                                 video_size=Math.round(video_size/(1024*1024)*100)/100+\" Mb\";\r\n\r\n                               return video_size;\r\n  }\r\n\r\n  function qiniuInit(vue){\r\n\r\n  uploader = Qiniu.uploader({\r\n      runtimes: 'html5,flash,html4',      // 上传模式，依次退化\r\n      browse_button: 'pickfiles',         // 上传选择的点选按钮，必需\r\n      uptoken_func: function(){    // 在需要获取uptoken时，该方法会被调用\r\n         // return \"123\"; \r\n      },\r\n      get_new_uptoken: false,             // 设置上传文件的时候是否每次都重新获取新的uptoken\r\n      // downtoken_url: '/downtoken',\r\n      // Ajax请求downToken的Url，私有空间时使用，JS-SDK将向该地址POST文件的key和domain，服务端返回的JSON必须包含url字段，url值为该文件的下载地址\r\n      unique_names: false,              // 默认false，key为文件名。若开启该选项，JS-SDK会为每个文件自动生成key（文件名）\r\n      save_key: false,                  // 默认false。若在服务端生成uptoken的上传策略中指定了sava_key，则开启，SDK在前端将不对key进行任何处理\r\n      domain: 'http://qiniu-plupload.qiniudn.com/',     // bucket域名，下载资源时用到，必需\r\n      container: 'container',             // 上传区域DOM ID，默认是browser_button的父元素\r\n      max_file_size: '1024mb',             // 最大文件体积限制\r\n      flash_swf_url: 'static/bower_components/plupload/js/Moxie.swf',  //引入flash，相对路径\r\n      max_retries: 0,                     // 上传失败最大重试次数\r\n      dragdrop: true,                     // 开启可拖曳上传\r\n      drop_element: 'container',          // 拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传\r\n      chunk_size: '10mb',                  // 分块上传时，每块的体积\r\n      auto_start: true,                   // 选择文件后自动上传，若关闭需要自己绑定事件触发上传\r\n      multi_selection: true,\r\n      filters : {\r\n          max_file_size : '1000mb',\r\n          prevent_duplicates: false,\r\n          // Specify what files to browse for\r\n          mime_types: [\r\n              {title : \"Video files\", extensions : \"mp4\"}, // 限定flv,mpg,mpeg,avi,wmv,mov,asf,rm,rmvb,mkv,m4v,mp4后缀格式上传\r\n              {title : \"Image files\", extensions : \"jpg,png,jpeg\"}, // 限定jpg,gif,png后缀上传\r\n          ]\r\n      },\r\n      init: {\r\n          'FilesAdded': function(up, files) {\r\n\r\n              plupload.each(files, function(file) {\r\n                vue.progresshow=true;\r\n              });\r\n          },\r\n          'BeforeUpload': function(up, file) {\r\n\r\n                 vue.progresscount=10;\r\n                 vue.progresstatus=\"active\";\r\n\r\n\r\n                  vue.progressspeed=\"1.5 Mb/s\";\r\n\r\n               var interval=setInterval(function(){\r\n               \tif(vue.progresscount===40){\r\n\t\t                clearInterval(interval)\r\n\r\n               \t\t  vue.$Notice.success({title:'上传成功'});\r\n\r\n\t\t                setTimeout(function(){\r\n\t\t                   vue.progressspeed=0;\r\n              \t\t\t   vue.progresstatus=\"wrong\";\r\n\r\n\t\t                  \t  vue.$Message.error('上传失败');\r\n\t\t               \t\t setTimeout(function(){\r\n\t\t               \t\t vue.progresscount=0;\r\n\r\n\t\t              \t\t\t\t  vue.progresshow=false;\r\n\r\n\r\n\t\t\t\t\t\t\t\t           var obj=\t{\r\n\t\t\t\t\t\t              \t\ttask_status:0,\r\n\t\t\t\t\t\t              \t\ttimestamp:\"2017-08-10 17:03:54\",\r\n\t\t\t\t\t\t              \t\tvideo_duration:\"11.121667\",\r\n\t\t\t\t\t\t              \t\tvideo_size:1732410,\r\n\t\t\t\t\t\t\t\t\t\t\tvideo_name:\"http://otl6ypoog.bkt.clouddn.com/Objectstoarge/videos/2017-08-10/33337_p.mp4\",\r\n\t\t\t\t\t\t              \t};\r\n\r\n\t\t\t\t\t\t              \tvue.video_list.push(obj);\r\n\t\t\t\t\t\t              \tvue.setInitPage(1);\r\n\t\t            \t\t\t  },4000)\r\n\t\t               \t\t},1000);\r\n               \t}else{\r\n               \t\t vue.progresscount+=2;\r\n\r\n               \t}\r\n              },100);\r\n\r\n          },\r\n          'UploadProgress': function(up, file) {\r\n          },\r\n          'FileUploaded': function(up, file, info) {\r\n          },\r\n          'Error': function(up, err, errTip) {\r\n                 //上传出错时，处理相关的事情\r\n                \r\n\r\n          },\r\n          'UploadComplete': function() {\r\n                 //队列文件处理完毕后，处理相关的事情\r\n          },\r\n          'Key': function(up, file) {\r\n              // return key\r\n          }\r\n      }\r\n  });\r\n}\r\nexport default {\r\n     components: { expandRow },\r\n\r\n  name: 'buttons',\r\n  data () {\r\n            return {\r\n              progresshow:false,\r\n              progresscount:0,\r\n              progresstatus:'active',\r\n              progressspeed:0,\r\n              video_list:[\r\n              \t{\r\n              \t\ttask_status:0,\r\n              \t\ttimestamp:\"2017-08-10 17:03:54\",\r\n              \t\tvideo_duration:\"11s\",\r\n              \t\tvideo_size:1732410,\r\n\t\t\t\t        \tvideo_name:\"p.mp4\",\r\n              \t},\r\n              \t{\r\n              \t\ttask_status:1,\r\n              \t\ttimestamp:\"2017-08-10 17:03:54\",\r\n              \t\tvideo_duration:\"11s\",\r\n              \t\tvideo_size:1732410,\r\n\t\t\t\t        \tvideo_name:\"p.mp4\",\r\n              \t},\r\n                {\r\n                  task_status:1,\r\n                  timestamp:\"2017-08-10 17:03:54\",\r\n                  video_duration:\"11s\",\r\n                  video_size:1732410,\r\n                  video_name:\"p.mp4\",\r\n                },\r\n                {\r\n                  task_status:0,\r\n                  timestamp:\"2017-08-10 17:03:54\",\r\n                  video_duration:\"11s\",\r\n                  video_size:1732410,\r\n                  video_name:\"p.mp4\",\r\n                },\r\n                {\r\n                  task_status:1,\r\n                  timestamp:\"2017-08-10 17:03:54\",\r\n                  video_duration:\"11s\",\r\n                  video_size:1732410,\r\n                  video_name:\"p.mp4\",\r\n                },\r\n                {\r\n                  task_status:0,\r\n                  timestamp:\"2017-08-10 17:03:54\",\r\n                  video_duration:\"11s\",\r\n                  video_size:1732410,\r\n                  video_name:\"p.mp4\",\r\n                },\r\n              ],\r\n              pageindex:1,\r\n              page_video_list:[],\r\n              lodding:false,\r\n              list_loadding:false,\r\n                columns7: [\r\n                         {\r\n                              type: 'expand',\r\n                             width:\"30\",\r\n                              ellipsis:'true',\r\n\r\n                              render: (h, params) => {\r\n                                  return h(expandRow, {\r\n                                      props: {\r\n                                          row: params.row\r\n                                      }\r\n                                  })\r\n                              }\r\n                          },\r\n                          {\r\n                              title: '视频名称',\r\n                              key: 'video_name',\r\n                              ellipsis:'true',\r\n                          },\r\n                          {\r\n                                 title: '上传时间',\r\n                              ellipsis:'true',\r\n                                key: 'timestamp',\r\n                             \r\n                          },\r\n\r\n                           {\r\n                              title: '时长',\r\n                              ellipsis:'true',\r\n                              key:'video_duration',\r\n                          },\r\n                          {\r\n                              title: '大小',\r\n                              ellipsis:'true',\r\n                              key:'video_size',\r\n                             filters: [\r\n                            {\r\n                                label: '大于10M',\r\n                                value: 1\r\n                            },\r\n                            {\r\n                                label: '小于10M',\r\n                                value: 2\r\n                            }\r\n                        ],\r\n                        filterMultiple: false,\r\n                        filterMethod (value, row) {\r\n                            if (value === 1) {\r\n                                return row.video_size>1024*1024*1024*10;\r\n                            } else if (value === 2) {\r\n                                return row.video_size<1024*1024*10;\r\n                            }\r\n                        }\r\n                          },\r\n                           {\r\n                              title: '状态',\r\n                              ellipsis:'true',\r\n                              filters: [\r\n                            {\r\n                                label: '处理完成',\r\n                                value: 1\r\n                            },\r\n                            {\r\n                                label: '正在处理',\r\n                                value: 2\r\n                            }\r\n                        ],\r\n                        filterMultiple: false,\r\n                        filterMethod (value, row) {\r\n                            if (value === 1) {\r\n                                return row.task_status===1;\r\n                            } else if (value === 2) {\r\n                                return row.task_status===0;\r\n                           }\r\n                        },\r\n\r\n                              render: (h, params) => {\r\n                                const task_status=parseInt(params.row.task_status);\r\n\r\n                                if(task_status===0)\r\n                                    return h('div', [\r\n                                  h('Tag', {\r\n                                props: {\r\n                                    type: 'dot',\r\n                                    color: \"blue\"\r\n                                }\r\n                            }, \"正在处理\"),\r\n                                     ]);\r\n\r\n                                else if(task_status===1)\r\n                                    return h('div', [\r\n                                      \r\n                                          h('Tag', {\r\n                                props: {\r\n                                    type: 'dot',\r\n                                    color: \"green\"\r\n                                }\r\n                            }, \"处理完成\"),\r\n                                     ]);\r\n                            }\r\n                          },\r\n                         \r\n                          {\r\n                              title: '操作',\r\n                              key: 'action',\r\n                              align: 'center',\r\n                              ellipsis:'true',\r\n\r\n                              render: (h, params) => {\r\n                                const task_status=parseInt(params.row.task_status);\r\n                                if(task_status===0)\r\n                                {\r\n                                  return h('div', [\r\n                                    h('Tooltip',{\r\n                                          props: {\r\n                                              content: '还未分析完成，暂时不能查看',\r\n                                          },\r\n                                    },[\r\n                                    h('Button', {\r\n                                          props: {\r\n                                              type: 'primary',\r\n                                              size: 'small',\r\n                                              loading:true,\r\n                                          },\r\n                                          style: {\r\n                                              marginRight: '5px'\r\n                                          },\r\n                                      }, '处理中')]),\r\n                                      h('Button', {\r\n                                          props: {\r\n                                              type: 'error',\r\n                                              size: 'small',\r\n                                              disabled:true,\r\n                                          },\r\n                                          on: {\r\n                                              click: () => {\r\n                                                  this.remove(params.index)\r\n                                              }\r\n                                          }\r\n                                      }, '删除')\r\n                                    \r\n                                      \r\n                                  ]);\r\n                                }\r\n                                else if(task_status===1){\r\n                                  return h('div', [\r\n                                      h('Button', {\r\n                                          props: {\r\n                                              type: 'primary',\r\n                                              size: 'small',\r\n                                          },\r\n                                          style: {\r\n                                              marginRight: '5px'\r\n                                          },\r\n                                          on: {\r\n                                              click: () => {\r\n                                          this.$router.push({path:'/tabledetail/'+(((this.pageindex-1)*10)+params.index) })\r\n\r\n                                              }\r\n                                          },\r\n                                      }, '查看结果'),\r\n                                      h('Button', {\r\n                                          props: {\r\n                                              type: 'error',\r\n                                              size: 'small',\r\n                                          },\r\n                                          on: {\r\n                                              click: () => {\r\n                                                  this.remove(params.index)\r\n                                              }\r\n                                          }\r\n                                      }, '删除')\r\n                                  ]);\r\n                              }\r\n                                }//render\r\n                            },//{\r\n                ],//cloumn\r\n            }//return\r\n        },//data\r\n        methods: {\r\n\t\t            remove (index) {\r\n\t\t                this.video_list.splice(index, 1);\r\n\t\t            },\r\n\t\t        qiniu_upload(){\r\n\t\t          uploader.start();\r\n\t\t        },\r\n\t\t        setInitPage(page)\r\n\t\t        {\r\n\r\n\t\t          this.page_video_list=[];\r\n\t\t          this.pageindex=page;\r\n\t\t            let video_list=this.video_list;\r\n\t\t          for(let i=(page-1)*10;i<(page-1)*10+10;i++)\r\n\t\t          {\r\n\r\n\r\n\t\t              if(i<video_list.length)\r\n\t\t              {\r\n\r\n\t\t                 this.page_video_list.push(this.video_list[i]);\r\n\r\n\t\t              }\r\n\t\t          }\r\n\t\t       },\r\n            exportData (type) {\r\n                if (type === 1) {\r\n                    this.$refs.table.exportCsv({\r\n                        filename: '原始数据',\r\n                        columns: this.columns7,\r\n                        data: this.video_list\r\n                    });\r\n                } else if (type === 2) {\r\n                    this.$refs.table.exportCsv({\r\n                        filename: '排序和过滤后的数据',\r\n                        original: false\r\n                    });\r\n                } \r\n            }        \r\n     },\r\n     mounted(){\r\n          const vue=this;\r\n\r\n            this.list_loadding=true;\r\n            setTimeout(function(){\r\n          \t\t  vue.list_loadding=false;\r\n\r\n            },2000)\r\n           qiniuInit(vue);//初始化七牛数据\r\n           this.setInitPage(1);\r\n        },\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n<style type=\"text/css\" scoped>\r\n.ivu-tag-dot{\r\n\tborder: none!important;\r\n}\r\ntr.ivu-table-row-hover td .ivu-tag-dot{\r\n\tbackground-color: #ebf7ff!important;\r\n}\r\n\r\n .demo-i-circle-custom h1{\r\n            color: #3f414d;\r\n            font-size: 10px;\r\n            font-weight: normal;\r\n        }\r\n        .demo-i-circle-custom p{\r\n            color: #657180;\r\n            font-size: 8px;\r\n            margin: 5px 0 2px;\r\n        }\r\n        .demo-i-circle-custom span{\r\n            display: block;\r\n            padding-top: 15px;\r\n            color: #657180;\r\n            font-size: 10px;}\r\n           .demo-i-circle-custom span :before{\r\n                content: '';\r\n                display: block;\r\n                width: 50px;\r\n                height: 1px;\r\n                margin: 0 auto;\r\n                background: #e0e3e6;\r\n                position: relative;\r\n                top: -20px;\r\n            };\r\n        .demo-i-circle-custom span i{\r\n            font-style: normal;\r\n            color: #3f414d;\r\n        }\r\n/*wz-btn wz-btn-primary wz-btn-small wz-btn-loading*/\r\n\r\n        .ivu-btn.ivu-btn-primary.ivu-btn-small:not(.ivu-btn-loading ){\r\n          padding :2px 10px!important;\r\n        }\r\n          td.ivu-table-expanded-cell{\r\n        background-color: white!important;\r\n\r\n    }\r\n</style>\r\n\r\n\r\n\r\n"],"sourceRoot":"src/views"}]}