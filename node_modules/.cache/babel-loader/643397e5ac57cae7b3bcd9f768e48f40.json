{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\button\\button.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\button\\button.vue","mtime":1561122214853},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["import _defineProperty from \"E:\\\\TRADE\\\\ThinkPHP\\\\pingzi\\\\Application\\\\Admin\\\\View\\\\TGorder\\\\generalize\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\nimport Icon from \"../icon\";\nimport { oneOf } from \"../../utils/assist\";\nimport mixinsLink from \"../../mixins/link\";\nvar prefixCls = 'ivu-btn';\nexport default {\n  name: 'Button',\n  mixins: [mixinsLink],\n  components: {\n    Icon: Icon\n  },\n  props: {\n    type: {\n      validator: function validator(value) {\n        return oneOf(value, ['default', 'primary', 'dashed', 'text', 'info', 'success', 'warning', 'error']);\n      },\n      default: 'default'\n    },\n    shape: {\n      validator: function validator(value) {\n        return oneOf(value, ['circle', 'circle-outline']);\n      }\n    },\n    size: {\n      validator: function validator(value) {\n        return oneOf(value, ['small', 'large', 'default']);\n      },\n      default: function _default() {\n        return !this.$IVIEW || this.$IVIEW.size === '' ? 'default' : this.$IVIEW.size;\n      }\n    },\n    loading: Boolean,\n    disabled: Boolean,\n    htmlType: {\n      default: 'button',\n      validator: function validator(value) {\n        return oneOf(value, ['button', 'submit', 'reset']);\n      }\n    },\n    icon: {\n      type: String,\n      default: ''\n    },\n    customIcon: {\n      type: String,\n      default: ''\n    },\n    long: {\n      type: Boolean,\n      default: false\n    },\n    ghost: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      showSlot: true\n    };\n  },\n  computed: {\n    classes: function classes() {\n      var _ref;\n\n      return [\"\".concat(prefixCls), \"\".concat(prefixCls, \"-\").concat(this.type), (_ref = {}, _defineProperty(_ref, \"\".concat(prefixCls, \"-long\"), this.long), _defineProperty(_ref, \"\".concat(prefixCls, \"-\").concat(this.shape), !!this.shape), _defineProperty(_ref, \"\".concat(prefixCls, \"-\").concat(this.size), this.size !== 'default'), _defineProperty(_ref, \"\".concat(prefixCls, \"-loading\"), this.loading != null && this.loading), _defineProperty(_ref, \"\".concat(prefixCls, \"-icon-only\"), !this.showSlot && (!!this.icon || !!this.customIcon || this.loading)), _defineProperty(_ref, \"\".concat(prefixCls, \"-ghost\"), this.ghost), _ref)];\n    },\n    // Point out if it should render as <a> tag\n    isHrefPattern: function isHrefPattern() {\n      var to = this.to;\n      return !!to;\n    },\n    tagName: function tagName() {\n      var isHrefPattern = this.isHrefPattern;\n      return isHrefPattern ? 'a' : 'button';\n    },\n    tagProps: function tagProps() {\n      var isHrefPattern = this.isHrefPattern;\n\n      if (isHrefPattern) {\n        var linkUrl = this.linkUrl,\n            target = this.target;\n        return {\n          href: linkUrl,\n          target: target\n        };\n      } else {\n        var htmlType = this.htmlType;\n        return {\n          type: htmlType\n        };\n      }\n    }\n  },\n  methods: {\n    // Ctrl or CMD and click, open in new window when use `to`\n    handleClickLink: function handleClickLink(event) {\n      this.$emit('click', event);\n      var openInNewWindow = event.ctrlKey || event.metaKey;\n      this.handleCheckClick(event, openInNewWindow);\n    }\n  },\n  mounted: function mounted() {\n    this.showSlot = this.$slots.default !== undefined;\n  }\n};",{"version":3,"sources":["button.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <component :is=\"tagName\" :class=\"classes\" :disabled=\"disabled\" @click=\"handleClickLink\" v-bind=\"tagProps\">\n        <Icon class=\"ivu-load-loop\" type=\"ios-loading\" v-if=\"loading\"></Icon>\n        <Icon :type=\"icon\" :custom=\"customIcon\" v-if=\"(icon || customIcon) && !loading\"></Icon>\n        <span v-if=\"showSlot\" ref=\"slot\"><slot></slot></span>\n    </component>\n</template>\n<script>\n    import Icon from '../icon';\n    import { oneOf } from '../../utils/assist';\n    import mixinsLink from '../../mixins/link';\n\n    const prefixCls = 'ivu-btn';\n\n    export default {\n        name: 'Button',\n        mixins: [ mixinsLink ],\n        components: { Icon },\n        props: {\n            type: {\n                validator (value) {\n                    return oneOf(value, ['default', 'primary', 'dashed', 'text', 'info', 'success', 'warning', 'error']);\n                },\n                default: 'default'\n            },\n            shape: {\n                validator (value) {\n                    return oneOf(value, ['circle', 'circle-outline']);\n                }\n            },\n            size: {\n                validator (value) {\n                    return oneOf(value, ['small', 'large', 'default']);\n                },\n                default () {\n                    return !this.$IVIEW || this.$IVIEW.size === '' ? 'default' : this.$IVIEW.size;\n                }\n            },\n            loading: Boolean,\n            disabled: Boolean,\n            htmlType: {\n                default: 'button',\n                validator (value) {\n                    return oneOf(value, ['button', 'submit', 'reset']);\n                }\n            },\n            icon: {\n                type: String,\n                default: ''\n            },\n            customIcon: {\n                type: String,\n                default: ''\n            },\n            long: {\n                type: Boolean,\n                default: false\n            },\n            ghost: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data () {\n            return {\n                showSlot: true\n            };\n        },\n        computed: {\n            classes () {\n                return [\n                    `${prefixCls}`,\n                    `${prefixCls}-${this.type}`,\n                    {\n                        [`${prefixCls}-long`]: this.long,\n                        [`${prefixCls}-${this.shape}`]: !!this.shape,\n                        [`${prefixCls}-${this.size}`]: this.size !== 'default',\n                        [`${prefixCls}-loading`]: this.loading != null && this.loading,\n                        [`${prefixCls}-icon-only`]: !this.showSlot && (!!this.icon || !!this.customIcon || this.loading),\n                        [`${prefixCls}-ghost`]: this.ghost\n                    }\n                ];\n            },\n            // Point out if it should render as <a> tag\n            isHrefPattern() {\n                const {to} = this;\n                return !!to;\n            },\n            tagName() {\n                const {isHrefPattern} = this;\n                return isHrefPattern ? 'a' : 'button';\n            },\n            tagProps() {\n                const {isHrefPattern} = this;\n                if(isHrefPattern) {\n                    const {linkUrl,target}=this;\n                    return {href: linkUrl, target};\n                } else {\n                    const {htmlType} = this;\n                    return {type: htmlType};\n                }\n            }\n        },\n        methods: {\n            // Ctrl or CMD and click, open in new window when use `to`\n            handleClickLink (event) {\n                this.$emit('click', event);\n                const openInNewWindow = event.ctrlKey || event.metaKey;\n\n                this.handleCheckClick(event, openInNewWindow);\n            }\n        },\n        mounted () {\n            this.showSlot = this.$slots.default !== undefined;\n        }\n    };\n</script>\n"],"sourceRoot":"node_modules/iview/src/components/button"}]}