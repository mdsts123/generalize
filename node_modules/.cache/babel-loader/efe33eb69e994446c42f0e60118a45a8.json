{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\mock\\login.js","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\mock\\login.js","mtime":1561550129654},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport { param2Obj } from '@/utils';\nvar userMap = {\n  admin: {\n    role: ['admin'],\n    token: 'admin',\n    introduction: '我是超级管理员',\n    name: 'Super Admin',\n    uid: '001'\n  },\n  editor: {\n    role: ['editor'],\n    token: 'editor',\n    introduction: '我是编辑',\n    name: 'Normal Editor',\n    uid: '002'\n  },\n  developer: {\n    role: ['develop'],\n    token: 'develop',\n    introduction: '我是开发',\n    name: '工程师小王',\n    uid: '003'\n  }\n};\nexport default {\n  loginByEmail: function loginByEmail(config) {\n    var _JSON$parse = JSON.parse(config.body),\n        email = _JSON$parse.email;\n\n    return userMap[email.split('@')[0]];\n  },\n  getInfo: function getInfo(config) {\n    var _param2Obj = param2Obj(config.url),\n        token = _param2Obj.token;\n\n    if (userMap[token]) {\n      return userMap[token];\n    } else {\n      return Promise.reject('a');\n    }\n  },\n  logout: function logout() {\n    return 'success';\n  }\n};",{"version":3,"sources":["E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\mock\\login.js"],"names":["param2Obj","userMap","admin","role","token","introduction","name","uid","editor","developer","loginByEmail","config","JSON","parse","body","email","split","getInfo","url","Promise","reject","logout"],"mappings":";AAAA,SAASA,SAAT,QAA0B,SAA1B;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,CAAC,OAAD,CADD;AAELC,IAAAA,KAAK,EAAE,OAFF;AAGLC,IAAAA,YAAY,EAAE,SAHT;AAILC,IAAAA,IAAI,EAAE,aAJD;AAKLC,IAAAA,GAAG,EAAE;AALA,GADO;AAQdC,EAAAA,MAAM,EAAE;AACNL,IAAAA,IAAI,EAAE,CAAC,QAAD,CADA;AAENC,IAAAA,KAAK,EAAE,QAFD;AAGNC,IAAAA,YAAY,EAAE,MAHR;AAINC,IAAAA,IAAI,EAAE,eAJA;AAKNC,IAAAA,GAAG,EAAE;AALC,GARM;AAiBdE,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CAAC,SAAD,CADG;AAETC,IAAAA,KAAK,EAAE,SAFE;AAGTC,IAAAA,YAAY,EAAE,MAHL;AAITC,IAAAA,IAAI,EAAE,OAJG;AAKTC,IAAAA,GAAG,EAAE;AALI;AAjBG,CAAhB;AA0BA,eAAe;AACbG,EAAAA,YAAY,EAAE,sBAAAC,MAAM,EAAI;AAAA,sBACJC,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACG,IAAlB,CADI;AAAA,QACdC,KADc,eACdA,KADc;;AAEpB,WAAOd,OAAO,CAACc,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAD,CAAd;AACH,GAJY;AAKbC,EAAAA,OAAO,EAAE,iBAAAN,MAAM,EAAI;AAAA,qBACCX,SAAS,CAACW,MAAM,CAACO,GAAR,CADV;AAAA,QACTd,KADS,cACTA,KADS;;AAEjB,QAAIH,OAAO,CAACG,KAAD,CAAX,EAAoB;AAClB,aAAOH,OAAO,CAACG,KAAD,CAAd;AACD,KAFD,MAEO;AACL,aAAOe,OAAO,CAACC,MAAR,CAAe,GAAf,CAAP;AACD;AACF,GAZY;AAabC,EAAAA,MAAM,EAAE;AAAA,WAAM,SAAN;AAAA;AAbK,CAAf","sourcesContent":["import { param2Obj } from '@/utils';\r\n\r\nconst userMap = {\r\n  admin: {\r\n    role: ['admin'],\r\n    token: 'admin',\r\n    introduction: '我是超级管理员',\r\n    name: 'Super Admin',\r\n    uid: '001'\r\n  },\r\n  editor: {\r\n    role: ['editor'],\r\n    token: 'editor',\r\n    introduction: '我是编辑',\r\n    name: 'Normal Editor',\r\n    uid: '002'\r\n\r\n\r\n  },\r\n  developer: {\r\n    role: ['develop'],\r\n    token: 'develop',\r\n    introduction: '我是开发',\r\n    name: '工程师小王',\r\n    uid: '003'\r\n  }\r\n}\r\n\r\nexport default {\r\n  loginByEmail: config => {\r\n    const { email } = JSON.parse(config.body);\r\n      return userMap[email.split('@')[0]];\r\n  },\r\n  getInfo: config => {\r\n    const { token } = param2Obj(config.url);\r\n    if (userMap[token]) {\r\n      return userMap[token];\r\n    } else {\r\n      return Promise.reject('a');\r\n    }\r\n  },\r\n  logout: () => 'success'\r\n};\r\n"]}]}