{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\tooltip\\tooltip.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\tooltip\\tooltip.vue","mtime":1561122214853},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["import _defineProperty from \"E:\\\\TRADE\\\\ThinkPHP\\\\pingzi\\\\Application\\\\Admin\\\\View\\\\TGorder\\\\generalize\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Popper from \"../base/popper\";\nimport TransferDom from \"../../directives/transfer-dom\";\nimport { oneOf } from \"../../utils/assist\";\nimport { transferIndex, transferIncrease } from \"../../utils/transfer-queue\";\nvar prefixCls = 'ivu-tooltip';\nexport default {\n  name: 'Tooltip',\n  directives: {\n    TransferDom: TransferDom\n  },\n  mixins: [Popper],\n  props: {\n    placement: {\n      validator: function validator(value) {\n        return oneOf(value, ['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end']);\n      },\n      default: 'bottom'\n    },\n    content: {\n      type: [String, Number],\n      default: ''\n    },\n    delay: {\n      type: Number,\n      default: 100\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    controlled: {\n      // under this prop,Tooltip will not close when mouseleave\n      type: Boolean,\n      default: false\n    },\n    always: {\n      type: Boolean,\n      default: false\n    },\n    transfer: {\n      type: Boolean,\n      default: function _default() {\n        return !this.$IVIEW || this.$IVIEW.transfer === '' ? false : this.$IVIEW.transfer;\n      }\n    },\n    theme: {\n      validator: function validator(value) {\n        return oneOf(value, ['dark', 'light']);\n      },\n      default: 'dark'\n    },\n    maxWidth: {\n      type: [String, Number]\n    }\n  },\n  data: function data() {\n    return {\n      prefixCls: prefixCls,\n      tIndex: this.handleGetIndex()\n    };\n  },\n  computed: {\n    innerStyles: function innerStyles() {\n      var styles = {};\n      if (this.maxWidth) styles['max-width'] = \"\".concat(this.maxWidth, \"px\");\n      return styles;\n    },\n    innerClasses: function innerClasses() {\n      return [\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-inner-with-width\"), !!this.maxWidth)];\n    },\n    dropStyles: function dropStyles() {\n      var styles = {};\n      if (this.transfer) styles['z-index'] = 1060 + this.tIndex;\n      return styles;\n    }\n  },\n  watch: {\n    content: function content() {\n      this.updatePopper();\n    }\n  },\n  methods: {\n    handleShowPopper: function handleShowPopper() {\n      var _this = this;\n\n      if (this.timeout) clearTimeout(this.timeout);\n      this.timeout = setTimeout(function () {\n        _this.visible = true;\n      }, this.delay);\n      this.tIndex = this.handleGetIndex();\n    },\n    handleClosePopper: function handleClosePopper() {\n      var _this2 = this;\n\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n\n        if (!this.controlled) {\n          this.timeout = setTimeout(function () {\n            _this2.visible = false;\n          }, 100);\n        }\n      }\n    },\n    handleGetIndex: function handleGetIndex() {\n      transferIncrease();\n      return transferIndex;\n    }\n  },\n  mounted: function mounted() {\n    if (this.always) {\n      this.updatePopper();\n    }\n  }\n};",{"version":3,"sources":["tooltip.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div :class=\"[prefixCls]\" @mouseenter=\"handleShowPopper\" @mouseleave=\"handleClosePopper\">\n        <div :class=\"[prefixCls + '-rel']\" ref=\"reference\">\n            <slot></slot>\n        </div>\n        <transition name=\"fade\">\n            <div\n                :class=\"[prefixCls + '-popper', prefixCls + '-' + theme]\"\n                :style=\"dropStyles\"\n                ref=\"popper\"\n                v-show=\"!disabled && (visible || always)\"\n                @mouseenter=\"handleShowPopper\"\n                @mouseleave=\"handleClosePopper\"\n                :data-transfer=\"transfer\"\n                v-transfer-dom>\n                <div :class=\"[prefixCls + '-content']\">\n                    <div :class=\"[prefixCls + '-arrow']\"></div>\n                    <div :class=\"innerClasses\" :style=\"innerStyles\"><slot name=\"content\">{{ content }}</slot></div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n<script>\n    import Popper from '../base/popper';\n    import TransferDom from '../../directives/transfer-dom';\n    import { oneOf } from '../../utils/assist';\n    import { transferIndex, transferIncrease } from '../../utils/transfer-queue';\n\n    const prefixCls = 'ivu-tooltip';\n\n    export default {\n        name: 'Tooltip',\n        directives: { TransferDom },\n        mixins: [Popper],\n        props: {\n            placement: {\n                validator (value) {\n                    return oneOf(value, ['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end']);\n                },\n                default: 'bottom'\n            },\n            content: {\n                type: [String, Number],\n                default: ''\n            },\n            delay: {\n                type: Number,\n                default: 100\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            controlled: {    // under this prop,Tooltip will not close when mouseleave\n                type: Boolean,\n                default: false\n            },\n            always: {\n                type: Boolean,\n                default: false\n            },\n            transfer: {\n                type: Boolean,\n                default () {\n                    return !this.$IVIEW || this.$IVIEW.transfer === '' ? false : this.$IVIEW.transfer;\n                }\n            },\n            theme: {\n                validator (value) {\n                    return oneOf(value, ['dark', 'light']);\n                },\n                default: 'dark'\n            },\n            maxWidth: {\n                type: [String, Number]\n            }\n        },\n        data () {\n            return {\n                prefixCls: prefixCls,\n                tIndex: this.handleGetIndex()\n            };\n        },\n        computed: {\n            innerStyles () {\n                const styles = {};\n                if (this.maxWidth) styles['max-width'] = `${this.maxWidth}px`;\n                return styles;\n            },\n            innerClasses () {\n                return [\n                    `${prefixCls}-inner`,\n                    {\n                        [`${prefixCls}-inner-with-width`]: !!this.maxWidth\n                    }\n                ];\n            },\n            dropStyles () {\n                let styles = {};\n                if (this.transfer) styles['z-index'] = 1060 + this.tIndex;\n\n                return styles;\n            }\n        },\n        watch: {\n            content () {\n                this.updatePopper();\n            }\n        },\n        methods: {\n            handleShowPopper() {\n                if (this.timeout) clearTimeout(this.timeout);\n                this.timeout = setTimeout(() => {\n                    this.visible = true;\n                }, this.delay);\n                this.tIndex = this.handleGetIndex();\n            },\n            handleClosePopper() {\n                if (this.timeout) {\n                    clearTimeout(this.timeout);\n                    if (!this.controlled) {\n                        this.timeout = setTimeout(() => {\n                            this.visible = false;\n                        }, 100);\n                    }\n                }\n            },\n            handleGetIndex () {\n                transferIncrease();\n                return transferIndex;\n            },\n        },\n        mounted () {\n            if (this.always) {\n                this.updatePopper();\n            }\n        }\n    };\n</script>\n"],"sourceRoot":"node_modules/iview/src/components/tooltip"}]}