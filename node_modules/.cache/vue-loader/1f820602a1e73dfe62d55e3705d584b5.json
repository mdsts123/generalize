{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\views\\components\\Form.vue?vue&type=template&id=2f71f693&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\views\\components\\Form.vue","mtime":1561553260606},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1552301761574},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"Row\",\n        [\n          _c(\"Col\", { attrs: { span: \"24\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"doc-header\" },\n              [\n                _c(\n                  \"Form\",\n                  {\n                    ref: \"formInline\",\n                    attrs: {\n                      model: _vm.formInline,\n                      rules: _vm.ruleInline,\n                      inline: \"\"\n                    }\n                  },\n                  [\n                    _c(\n                      \"Form-item\",\n                      { attrs: { prop: \"user\" } },\n                      [\n                        _c(\n                          \"Input\",\n                          {\n                            attrs: { type: \"text\", placeholder: \"Username\" },\n                            model: {\n                              value: _vm.formInline.user,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formInline, \"user\", $$v)\n                              },\n                              expression: \"formInline.user\"\n                            }\n                          },\n                          [\n                            _c(\"Icon\", {\n                              attrs: {\n                                slot: \"prepend\",\n                                type: \"ios-person-outline\"\n                              },\n                              slot: \"prepend\"\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { prop: \"password\" } },\n                      [\n                        _c(\n                          \"Input\",\n                          {\n                            attrs: {\n                              type: \"password\",\n                              placeholder: \"Password\"\n                            },\n                            model: {\n                              value: _vm.formInline.password,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formInline, \"password\", $$v)\n                              },\n                              expression: \"formInline.password\"\n                            }\n                          },\n                          [\n                            _c(\"Icon\", {\n                              attrs: {\n                                slot: \"prepend\",\n                                type: \"ios-lock-outline\"\n                              },\n                              slot: \"prepend\"\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      [\n                        _c(\n                          \"Button\",\n                          {\n                            attrs: { type: \"primary\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.handleSubmit(\"formInline\")\n                              }\n                            }\n                          },\n                          [_vm._v(\"登录\")]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"doc-content\" }, [\n              _c(\"h5\", [_vm._v(\"行内表单\")]),\n              _c(\"p\", [_vm._v(\"设置属性 inline，表单元素可以水平排列。\")])\n            ])\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"Row\",\n        [\n          _c(\"Col\", { attrs: { span: \"24\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"doc-header\" },\n              [\n                _c(\n                  \"Form\",\n                  { attrs: { model: _vm.formItem, \"label-width\": 80 } },\n                  [\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"输入框\" } },\n                      [\n                        _c(\"Input\", {\n                          attrs: { placeholder: \"请输入\" },\n                          model: {\n                            value: _vm.formItem.input,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formItem, \"input\", $$v)\n                            },\n                            expression: \"formItem.input\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"选择器\" } },\n                      [\n                        _c(\n                          \"Select\",\n                          {\n                            attrs: { placeholder: \"请选择\" },\n                            model: {\n                              value: _vm.formItem.select,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formItem, \"select\", $$v)\n                              },\n                              expression: \"formItem.select\"\n                            }\n                          },\n                          [\n                            _c(\"Option\", { attrs: { value: \"beijing\" } }, [\n                              _vm._v(\"北京市\")\n                            ]),\n                            _c(\"Option\", { attrs: { value: \"shanghai\" } }, [\n                              _vm._v(\"上海市\")\n                            ]),\n                            _c(\"Option\", { attrs: { value: \"shenzhen\" } }, [\n                              _vm._v(\"深圳市\")\n                            ])\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"日期控件\" } },\n                      [\n                        _c(\"Date-picker\", {\n                          attrs: { type: \"date\", placeholder: \"选择日期\" },\n                          model: {\n                            value: _vm.formItem.date,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formItem, \"date\", $$v)\n                            },\n                            expression: \"formItem.date\"\n                          }\n                        }),\n                        _c(\"Time-picker\", {\n                          attrs: { type: \"time\", placeholder: \"选择时间\" },\n                          model: {\n                            value: _vm.formItem.time,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formItem, \"time\", $$v)\n                            },\n                            expression: \"formItem.time\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"单选框\" } },\n                      [\n                        _c(\n                          \"Radio-group\",\n                          {\n                            model: {\n                              value: _vm.formItem.radio,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formItem, \"radio\", $$v)\n                              },\n                              expression: \"formItem.radio\"\n                            }\n                          },\n                          [\n                            _c(\"Radio\", { attrs: { label: \"male\" } }, [\n                              _vm._v(\"男\")\n                            ]),\n                            _c(\"Radio\", { attrs: { label: \"female\" } }, [\n                              _vm._v(\"女\")\n                            ])\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"多选框\" } },\n                      [\n                        _c(\n                          \"Checkbox-group\",\n                          {\n                            model: {\n                              value: _vm.formItem.checkbox,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formItem, \"checkbox\", $$v)\n                              },\n                              expression: \"formItem.checkbox\"\n                            }\n                          },\n                          [\n                            _c(\"Checkbox\", { attrs: { label: \"吃饭\" } }),\n                            _c(\"Checkbox\", { attrs: { label: \"睡觉\" } }),\n                            _c(\"Checkbox\", { attrs: { label: \"跑步\" } }),\n                            _c(\"Checkbox\", { attrs: { label: \"看电影\" } })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"开关\" } },\n                      [\n                        _c(\n                          \"iSwitch\",\n                          {\n                            attrs: { size: \"large\" },\n                            model: {\n                              value: _vm.formItem.switch,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formItem, \"switch\", $$v)\n                              },\n                              expression: \"formItem.switch\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"span\",\n                              { attrs: { slot: \"open\" }, slot: \"open\" },\n                              [_vm._v(\"开启\")]\n                            ),\n                            _c(\n                              \"span\",\n                              { attrs: { slot: \"close\" }, slot: \"close\" },\n                              [_vm._v(\"关闭\")]\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"滑块\" } },\n                      [\n                        _c(\"Slider\", {\n                          attrs: { range: \"\" },\n                          model: {\n                            value: _vm.formItem.slider,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formItem, \"slider\", $$v)\n                            },\n                            expression: \"formItem.slider\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"文本域\" } },\n                      [\n                        _c(\"Input\", {\n                          attrs: {\n                            type: \"textarea\",\n                            autosize: { minRows: 2, maxRows: 5 },\n                            placeholder: \"请输入...\"\n                          },\n                          model: {\n                            value: _vm.formItem.textarea,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formItem, \"textarea\", $$v)\n                            },\n                            expression: \"formItem.textarea\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      [\n                        _c(\"Button\", { attrs: { type: \"primary\" } }, [\n                          _vm._v(\"提交\")\n                        ]),\n                        _c(\n                          \"Button\",\n                          {\n                            staticStyle: { \"margin-left\": \"8px\" },\n                            attrs: { type: \"ghost\" }\n                          },\n                          [_vm._v(\"取消\")]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"doc-content\" }, [\n              _c(\"h5\", [_vm._v(\"表单控件\")]),\n              _c(\"p\", [\n                _vm._v(\n                  \"在 Form 内，每个表单域由 Form-item 组成，可包含的控件有：Input、Radio、Checkbox、Switch、Select、Slider、DatePicker、TimePicker、Cascader、Transfer、InputNumber、Rate、Upload。\"\n                )\n              ]),\n              _c(\"p\", [\n                _vm._v(\n                  \"给 Form-item 设置属性 label 可以显示表单域的标签，需要给 Form 设置 label-width。 \"\n                )\n              ])\n            ])\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"Row\",\n        [\n          _c(\"Col\", { attrs: { span: \"24\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"doc-header\" },\n              [\n                _c(\n                  \"Form\",\n                  {\n                    attrs: {\n                      model: _vm.formLeft,\n                      \"label-position\": \"left\",\n                      \"label-width\": 100\n                    }\n                  },\n                  [\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"标题\" } },\n                      [\n                        _c(\"Input\", {\n                          model: {\n                            value: _vm.formLeft.input1,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formLeft, \"input1\", $$v)\n                            },\n                            expression: \"formLeft.input1\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"标题名称\" } },\n                      [\n                        _c(\"Input\", {\n                          model: {\n                            value: _vm.formLeft.input2,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formLeft, \"input2\", $$v)\n                            },\n                            expression: \"formLeft.input2\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"标题名称对齐\" } },\n                      [\n                        _c(\"Input\", {\n                          model: {\n                            value: _vm.formLeft.input3,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formLeft, \"input3\", $$v)\n                            },\n                            expression: \"formLeft.input3\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"Form\",\n                  {\n                    attrs: {\n                      model: _vm.formRight,\n                      \"label-position\": \"right\",\n                      \"label-width\": 100\n                    }\n                  },\n                  [\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"标题\" } },\n                      [\n                        _c(\"Input\", {\n                          model: {\n                            value: _vm.formRight.input1,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formRight, \"input1\", $$v)\n                            },\n                            expression: \"formRight.input1\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"标题名称\" } },\n                      [\n                        _c(\"Input\", {\n                          model: {\n                            value: _vm.formRight.input2,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formRight, \"input2\", $$v)\n                            },\n                            expression: \"formRight.input2\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"标题名称对齐\" } },\n                      [\n                        _c(\"Input\", {\n                          model: {\n                            value: _vm.formRight.input3,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formRight, \"input3\", $$v)\n                            },\n                            expression: \"formRight.input3\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"Form\",\n                  { attrs: { model: _vm.formTop, \"label-position\": \"top\" } },\n                  [\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"标题\" } },\n                      [\n                        _c(\"Input\", {\n                          model: {\n                            value: _vm.formTop.input1,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formTop, \"input1\", $$v)\n                            },\n                            expression: \"formTop.input1\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"标题名称\" } },\n                      [\n                        _c(\"Input\", {\n                          model: {\n                            value: _vm.formTop.input2,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formTop, \"input2\", $$v)\n                            },\n                            expression: \"formTop.input2\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"标题名称对齐\" } },\n                      [\n                        _c(\"Input\", {\n                          model: {\n                            value: _vm.formTop.input3,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formTop, \"input3\", $$v)\n                            },\n                            expression: \"formTop.input3\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"doc-content\" }, [\n              _c(\"h5\", [_vm._v(\"对齐方式\")]),\n              _c(\"p\", [\n                _vm._v(\n                  \"设置属性 label-position，可以改变表单域标签的位置，left 为左对齐，right 为右对齐，top 会置于表单域顶部\"\n                )\n              ])\n            ])\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"Row\",\n        [\n          _c(\"Col\", { attrs: { span: \"24\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"doc-header\" },\n              [\n                _c(\n                  \"Form\",\n                  {\n                    ref: \"formValidate\",\n                    attrs: {\n                      model: _vm.formValidate,\n                      rules: _vm.ruleValidate,\n                      \"label-width\": 80\n                    }\n                  },\n                  [\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"姓名\", prop: \"name\" } },\n                      [\n                        _c(\"Input\", {\n                          attrs: { placeholder: \"请输入姓名\" },\n                          model: {\n                            value: _vm.formValidate.name,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formValidate, \"name\", $$v)\n                            },\n                            expression: \"formValidate.name\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"邮箱\", prop: \"mail\" } },\n                      [\n                        _c(\"Input\", {\n                          attrs: { placeholder: \"请输入邮箱\" },\n                          model: {\n                            value: _vm.formValidate.mail,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formValidate, \"mail\", $$v)\n                            },\n                            expression: \"formValidate.mail\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"城市\", prop: \"city\" } },\n                      [\n                        _c(\n                          \"Select\",\n                          {\n                            attrs: { placeholder: \"请选择所在地\" },\n                            model: {\n                              value: _vm.formValidate.city,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formValidate, \"city\", $$v)\n                              },\n                              expression: \"formValidate.city\"\n                            }\n                          },\n                          [\n                            _c(\"Option\", { attrs: { value: \"beijing\" } }, [\n                              _vm._v(\"北京市\")\n                            ]),\n                            _c(\"Option\", { attrs: { value: \"shanghai\" } }, [\n                              _vm._v(\"上海市\")\n                            ]),\n                            _c(\"Option\", { attrs: { value: \"shenzhen\" } }, [\n                              _vm._v(\"深圳市\")\n                            ])\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"选择日期\" } },\n                      [\n                        _c(\n                          \"Row\",\n                          [\n                            _c(\n                              \"Col\",\n                              { attrs: { span: \"11\" } },\n                              [\n                                _c(\n                                  \"Form-item\",\n                                  { attrs: { prop: \"date\" } },\n                                  [\n                                    _c(\"Date-picker\", {\n                                      attrs: {\n                                        type: \"date\",\n                                        placeholder: \"选择日期\"\n                                      },\n                                      model: {\n                                        value: _vm.formValidate.date,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.formValidate,\n                                            \"date\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"formValidate.date\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"Col\",\n                              {\n                                staticStyle: { \"text-align\": \"center\" },\n                                attrs: { span: \"2\" }\n                              },\n                              [_vm._v(\"-\")]\n                            ),\n                            _c(\n                              \"Col\",\n                              { attrs: { span: \"11\" } },\n                              [\n                                _c(\n                                  \"Form-item\",\n                                  { attrs: { prop: \"time\" } },\n                                  [\n                                    _c(\"Time-picker\", {\n                                      attrs: {\n                                        type: \"time\",\n                                        placeholder: \"选择时间\"\n                                      },\n                                      model: {\n                                        value: _vm.formValidate.time,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.formValidate,\n                                            \"time\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"formValidate.time\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"性别\", prop: \"gender\" } },\n                      [\n                        _c(\n                          \"Radio-group\",\n                          {\n                            model: {\n                              value: _vm.formValidate.gender,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formValidate, \"gender\", $$v)\n                              },\n                              expression: \"formValidate.gender\"\n                            }\n                          },\n                          [\n                            _c(\"Radio\", { attrs: { label: \"male\" } }, [\n                              _vm._v(\"男\")\n                            ]),\n                            _c(\"Radio\", { attrs: { label: \"female\" } }, [\n                              _vm._v(\"女\")\n                            ])\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"爱好\", prop: \"interest\" } },\n                      [\n                        _c(\n                          \"Checkbox-group\",\n                          {\n                            model: {\n                              value: _vm.formValidate.interest,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formValidate, \"interest\", $$v)\n                              },\n                              expression: \"formValidate.interest\"\n                            }\n                          },\n                          [\n                            _c(\"Checkbox\", { attrs: { label: \"吃饭\" } }),\n                            _c(\"Checkbox\", { attrs: { label: \"睡觉\" } }),\n                            _c(\"Checkbox\", { attrs: { label: \"跑步\" } }),\n                            _c(\"Checkbox\", { attrs: { label: \"看电影\" } })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      { attrs: { label: \"介绍\", prop: \"desc\" } },\n                      [\n                        _c(\"Input\", {\n                          attrs: {\n                            type: \"textarea\",\n                            autosize: { minRows: 2, maxRows: 5 },\n                            placeholder: \"请输入...\"\n                          },\n                          model: {\n                            value: _vm.formValidate.desc,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formValidate, \"desc\", $$v)\n                            },\n                            expression: \"formValidate.desc\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      [\n                        _c(\n                          \"Button\",\n                          {\n                            attrs: { type: \"primary\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.handleSubmit(\"formValidate\")\n                              }\n                            }\n                          },\n                          [_vm._v(\"提交\")]\n                        ),\n                        _c(\n                          \"Button\",\n                          {\n                            staticStyle: { \"margin-left\": \"8px\" },\n                            attrs: { type: \"ghost\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.handleReset(\"formValidate\")\n                              }\n                            }\n                          },\n                          [_vm._v(\"重置\")]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"doc-content\" }, [\n              _c(\"h5\", [_vm._v(\"表单验证\")]),\n              _c(\"p\", [\n                _vm._v(\n                  \"Form 组件基于  async-validator 实现的数据验证，给 Form 设置属性 rules，同时给需要验证的 Form-item 设置属性 prop 指向对应字段即可。\"\n                )\n              ])\n            ])\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"Row\",\n        [\n          _c(\"Col\", { attrs: { span: \"24\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"doc-header\" },\n              [\n                _c(\n                  \"Form\",\n                  {\n                    ref: \"formDynamic\",\n                    attrs: { model: _vm.formDynamic, \"label-width\": 80 }\n                  },\n                  [\n                    _vm._l(_vm.formDynamic.items, function(item, index) {\n                      return _c(\n                        \"Form-item\",\n                        {\n                          key: index,\n                          attrs: {\n                            label: \"项目\" + (index + 1),\n                            prop: \"items.\" + index + \".value\",\n                            rules: {\n                              required: true,\n                              message: \"项目\" + (index + 1) + \"不能为空\",\n                              trigger: \"blur\"\n                            }\n                          }\n                        },\n                        [\n                          _c(\"Input\", {\n                            attrs: { type: \"text\", placeholder: \"请输入...\" },\n                            model: {\n                              value: item.value,\n                              callback: function($$v) {\n                                _vm.$set(item, \"value\", $$v)\n                              },\n                              expression: \"item.value\"\n                            }\n                          }),\n                          _c(\n                            \"Button\",\n                            {\n                              attrs: { type: \"ghost\", size: \"small\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.handleRemove(index)\n                                }\n                              }\n                            },\n                            [_vm._v(\"删除\")]\n                          )\n                        ],\n                        1\n                      )\n                    }),\n                    _c(\n                      \"Form-item\",\n                      [\n                        _c(\n                          \"Row\",\n                          [\n                            _c(\n                              \"Button\",\n                              {\n                                attrs: {\n                                  type: \"dashed\",\n                                  long: \"\",\n                                  icon: \"plus-round\"\n                                },\n                                on: { click: _vm.handleAdd }\n                              },\n                              [_vm._v(\"新增\")]\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"Form-item\",\n                      [\n                        _c(\n                          \"Button\",\n                          {\n                            attrs: { type: \"primary\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.handleSubmit(\"formDynamic\")\n                              }\n                            }\n                          },\n                          [_vm._v(\"提交\")]\n                        ),\n                        _c(\n                          \"Button\",\n                          {\n                            staticStyle: { \"margin-left\": \"8px\" },\n                            attrs: { type: \"ghost\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.handleReset(\"formDynamic\")\n                              }\n                            }\n                          },\n                          [_vm._v(\"重置\")]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  2\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"doc-content\" }, [\n              _c(\"h5\", [_vm._v(\"动态增减表单项\")]),\n              _c(\"p\", [\n                _vm._v(\n                  \"当需要动态维护 Form-item 时，也可以直接给 Form-item 设置属性 rules 来单独为该域做验证\"\n                )\n              ]),\n              _c(\"p\", [\n                _vm._v(\n                  \"动态设置 Form-item 的 prop 属性时，会依据上层的 Form 组件的 model 来获取，查看示例代码。\"\n                )\n              ]),\n              _c(\"p\", [\n                _vm._v(\n                  \"Form-item 还可以独立设置 required、error 等属性，详见 API。\"\n                )\n              ])\n            ])\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}