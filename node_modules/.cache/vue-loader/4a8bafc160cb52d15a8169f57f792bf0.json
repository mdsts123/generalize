{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\icon\\icon.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\iview\\src\\components\\icon\\icon.vue","mtime":1561122214853},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["//\n//\n//\n\nconst prefixCls = 'ivu-icon';\n\nexport default {\n    name: 'Icon',\n    props: {\n        type: {\n            type: String,\n            default: ''\n        },\n        size: [Number, String],\n        color: String,\n        custom: {\n            type: String,\n            default: ''\n        }\n    },\n    computed: {\n        classes () {\n            return [\n                `${prefixCls}`,\n                {\n                    [`${prefixCls}-${this.type}`]: this.type !== '',\n                    [`${this.custom}`]: this.custom !== '',\n                }\n            ];\n        },\n        styles () {\n            let style = {};\n\n            if (this.size) {\n                style['font-size'] = `${this.size}px`;\n            }\n\n            if (this.color) {\n                style.color = this.color;\n            }\n\n            return style;\n        }\n    },\n    methods: {\n        handleClick (event) {\n            this.$emit('click', event);\n        }\n    }\n};\n",{"version":3,"sources":["icon.vue"],"names":[],"mappings":";;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"icon.vue","sourceRoot":"node_modules/iview/src/components/icon","sourcesContent":["<template>\n    <i :class=\"classes\" :style=\"styles\" @click=\"handleClick\"></i>\n</template>\n<script>\n    const prefixCls = 'ivu-icon';\n\n    export default {\n        name: 'Icon',\n        props: {\n            type: {\n                type: String,\n                default: ''\n            },\n            size: [Number, String],\n            color: String,\n            custom: {\n                type: String,\n                default: ''\n            }\n        },\n        computed: {\n            classes () {\n                return [\n                    `${prefixCls}`,\n                    {\n                        [`${prefixCls}-${this.type}`]: this.type !== '',\n                        [`${this.custom}`]: this.custom !== '',\n                    }\n                ];\n            },\n            styles () {\n                let style = {};\n\n                if (this.size) {\n                    style['font-size'] = `${this.size}px`;\n                }\n\n                if (this.color) {\n                    style.color = this.color;\n                }\n\n                return style;\n            }\n        },\n        methods: {\n            handleClick (event) {\n                this.$emit('click', event);\n            }\n        }\n    };\n</script>\n"]}]}