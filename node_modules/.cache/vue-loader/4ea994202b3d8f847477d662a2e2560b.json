{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\views\\components\\Select.vue?vue&type=template&id=08ce5dea&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\views\\components\\Select.vue","mtime":1561113286125},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1552301761574},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"Row\",\n        [\n          _c(\"Col\", { attrs: { span: \"24\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"doc-header\" },\n              [\n                _c(\n                  \"Select\",\n                  {\n                    staticStyle: { width: \"200px\" },\n                    model: {\n                      value: _vm.model1,\n                      callback: function($$v) {\n                        _vm.model1 = $$v\n                      },\n                      expression: \"model1\"\n                    }\n                  },\n                  _vm._l(_vm.cityList, function(item) {\n                    return _c(\n                      \"Option\",\n                      { key: item, attrs: { value: item.value } },\n                      [_vm._v(_vm._s(item.label))]\n                    )\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"doc-content\" }, [\n              _c(\"h5\", [_vm._v(\"基础用法\")]),\n              _c(\"p\", [_vm._v(\"基本用法。可以使用 v-model 双向绑定数据。\")]),\n              _c(\"p\", [\n                _vm._v(\n                  \"单选时，value 只接受字符串和数字类型，多选时，只接受数组类型，组件会自动根据Option的value来返回选中的数据。\"\n                )\n              ]),\n              _c(\"p\", [_vm._v(\"可以给Select添加 style 样式，比如宽度。\")]),\n              _c(\"p\", [\n                _vm._v(\n                  \"在展开选择器后，可以使用键盘的up和down快速上下选择，按下Enter选择，按下Esc收起选择器。\"\n                )\n              ])\n            ])\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"Row\",\n        [\n          _c(\"Col\", { attrs: { span: \"24\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"doc-header\" },\n              [\n                _c(\n                  \"Select\",\n                  {\n                    staticStyle: { width: \"200px\" },\n                    attrs: { clearable: \"\" },\n                    model: {\n                      value: _vm.model8,\n                      callback: function($$v) {\n                        _vm.model8 = $$v\n                      },\n                      expression: \"model8\"\n                    }\n                  },\n                  _vm._l(_vm.cityList, function(item) {\n                    return _c(\n                      \"Option\",\n                      { key: item.value, attrs: { value: item.value } },\n                      [_vm._v(_vm._s(item.label))]\n                    )\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"doc-content\" }, [\n              _c(\"h5\", [_vm._v(\"可清空\")]),\n              _c(\"p\", [\n                _vm._v(\n                  \"通过设置属性clearable可以清空已选项，仅适用于单选模式。\"\n                )\n              ])\n            ])\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"Row\",\n        [\n          _c(\"Col\", { attrs: { span: \"24\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"doc-header\" },\n              [\n                _c(\n                  \"Select\",\n                  {\n                    staticStyle: { width: \"200px\" },\n                    model: {\n                      value: _vm.model7,\n                      callback: function($$v) {\n                        _vm.model7 = $$v\n                      },\n                      expression: \"model7\"\n                    }\n                  },\n                  [\n                    _c(\n                      \"Option-group\",\n                      { attrs: { label: \"热门城市\" } },\n                      _vm._l(_vm.cityList1, function(item) {\n                        return _c(\n                          \"Option\",\n                          { key: item.value, attrs: { value: item.value } },\n                          [_vm._v(_vm._s(item.label))]\n                        )\n                      }),\n                      1\n                    ),\n                    _c(\n                      \"Option-group\",\n                      { attrs: { label: \"其它城市\" } },\n                      _vm._l(_vm.cityList2, function(item) {\n                        return _c(\n                          \"Option\",\n                          { key: item.value, attrs: { value: item.value } },\n                          [_vm._v(_vm._s(item.label))]\n                        )\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"doc-content\" }, [\n              _c(\"h5\", [_vm._v(\"分组\")]),\n              _c(\"p\", [_vm._v(\"使用Option-group可将选项进行分\")])\n            ])\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"Row\",\n        [\n          _c(\"Col\", { attrs: { span: \"24\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"doc-header\" },\n              [\n                _c(\n                  \"Select\",\n                  {\n                    staticStyle: { width: \"260px\" },\n                    attrs: { multiple: \"\" },\n                    model: {\n                      value: _vm.model10,\n                      callback: function($$v) {\n                        _vm.model10 = $$v\n                      },\n                      expression: \"model10\"\n                    }\n                  },\n                  _vm._l(_vm.cityList, function(item) {\n                    return _c(\n                      \"Option\",\n                      { key: item.value, attrs: { value: item.value } },\n                      [_vm._v(_vm._s(item.label))]\n                    )\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"doc-content\" }, [\n              _c(\"h5\", [_vm._v(\"多选\")]),\n              _c(\"p\", [\n                _vm._v(\n                  \"通过设置属性multiple可以开启多选模式。多选模式下，model 接受数组类型的数据，所返回的也是数组。\"\n                )\n              ])\n            ])\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"Row\",\n        [\n          _c(\"Col\", { attrs: { span: \"24\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"doc-header\" },\n              [\n                _c(\n                  \"Select\",\n                  {\n                    attrs: { filterable: \"\" },\n                    model: {\n                      value: _vm.model11,\n                      callback: function($$v) {\n                        _vm.model11 = $$v\n                      },\n                      expression: \"model11\"\n                    }\n                  },\n                  _vm._l(_vm.cityList, function(item) {\n                    return _c(\n                      \"Option\",\n                      { key: item.value, attrs: { value: item.value } },\n                      [_vm._v(_vm._s(item.label))]\n                    )\n                  }),\n                  1\n                ),\n                _c(\n                  \"Select\",\n                  {\n                    attrs: { filterable: \"\", multiple: \"\" },\n                    model: {\n                      value: _vm.model12,\n                      callback: function($$v) {\n                        _vm.model12 = $$v\n                      },\n                      expression: \"model12\"\n                    }\n                  },\n                  _vm._l(_vm.cityList, function(item) {\n                    return _c(\n                      \"Option\",\n                      { key: item.value, attrs: { value: item.value } },\n                      [_vm._v(_vm._s(item.label))]\n                    )\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"doc-content\" }, [\n              _c(\"h5\", [_vm._v(\"可搜索\")]),\n              _c(\"p\", [\n                _vm._v(\n                  \"通过设置属性filterable可以开启搜索模式。单选和多选都支持搜索模式。多选搜索时，可以使用键盘Delete快捷删除最后一个已选项。\"\n                )\n              ])\n            ])\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}