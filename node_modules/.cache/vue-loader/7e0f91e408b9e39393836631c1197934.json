{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\components\\TodoList\\Todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\components\\TodoList\\Todo.vue","mtime":1561113286112},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\babel-loader\\lib\\index.js","mtime":1561126025822},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'Todo',\r\n  props: ['todo'],\r\n  data() {\r\n    return {\r\n      editing: false\r\n    }\r\n  },\r\n  directives: {\r\n    focus(el, { value }, { context }) {\r\n      if (value) {\r\n        context.$nextTick(() => {\r\n          el.focus()\r\n        })\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    deleteTodo(todo) {\r\n      this.$emit('deleteTodo', todo)\r\n    },\r\n    editTodo({ todo, value }) {\r\n      this.$emit('editTodo', { todo, value })\r\n    },\r\n    toggleTodo(todo) {\r\n      this.$emit('toggleTodo', todo)\r\n    },\r\n    doneEdit(e) {\r\n      const value = e.target.value.trim()\r\n      const { todo } = this\r\n      if (!value) {\r\n        this.deleteTodo({\r\n          todo\r\n        })\r\n      } else if (this.editing) {\r\n        this.editTodo({\r\n          todo,\r\n          value\r\n        })\r\n        this.editing = false\r\n      }\r\n    },\r\n    cancelEdit(e) {\r\n      e.target.value = this.todo.text\r\n      this.editing = false\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Todo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todo.vue","sourceRoot":"src/components/TodoList","sourcesContent":["<template>\r\n  <li class=\"todo\" :class=\"{ completed: todo.done, editing: editing }\">\r\n    <div class=\"view\">\r\n      <input class=\"toggle\"\r\n        type=\"checkbox\"\r\n        :checked=\"todo.done\"\r\n        @change=\"toggleTodo( todo)\">\r\n      <label v-text=\"todo.text\" @dblclick=\"editing = true\"></label>\r\n      <button class=\"destroy\" @click=\"deleteTodo( todo )\"></button>\r\n    </div>\r\n    <input class=\"edit\"\r\n      v-show=\"editing\"\r\n      v-focus=\"editing\"\r\n      :value=\"todo.text\"\r\n      @keyup.enter=\"doneEdit\"\r\n      @keyup.esc=\"cancelEdit\"\r\n      @blur=\"doneEdit\">\r\n  </li>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Todo',\r\n  props: ['todo'],\r\n  data() {\r\n    return {\r\n      editing: false\r\n    }\r\n  },\r\n  directives: {\r\n    focus(el, { value }, { context }) {\r\n      if (value) {\r\n        context.$nextTick(() => {\r\n          el.focus()\r\n        })\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    deleteTodo(todo) {\r\n      this.$emit('deleteTodo', todo)\r\n    },\r\n    editTodo({ todo, value }) {\r\n      this.$emit('editTodo', { todo, value })\r\n    },\r\n    toggleTodo(todo) {\r\n      this.$emit('toggleTodo', todo)\r\n    },\r\n    doneEdit(e) {\r\n      const value = e.target.value.trim()\r\n      const { todo } = this\r\n      if (!value) {\r\n        this.deleteTodo({\r\n          todo\r\n        })\r\n      } else if (this.editing) {\r\n        this.editTodo({\r\n          todo,\r\n          value\r\n        })\r\n        this.editing = false\r\n      }\r\n    },\r\n    cancelEdit(e) {\r\n      e.target.value = this.todo.text\r\n      this.editing = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}