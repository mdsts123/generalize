{"remainingRequest":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\views\\Table.vue?vue&type=style&index=0&id=462129f8&scoped=true&lang=css&","dependencies":[{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\src\\views\\Table.vue","mtime":1561113286120},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\css-loader\\index.js","mtime":1552301739085},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1552301761574},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\postcss-loader\\src\\index.js","mtime":1552301741774},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552301733393},{"path":"E:\\TRADE\\ThinkPHP\\pingzi\\Application\\Admin\\View\\TGorder\\generalize\\node_modules\\vue-loader\\lib\\index.js","mtime":1552301761574}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.ivu-tag-dot{\r\n\tborder: none!important;\r\n}\r\ntr.ivu-table-row-hover td .ivu-tag-dot{\r\n\tbackground-color: #ebf7ff!important;\r\n}\r\n\r\n .demo-i-circle-custom h1{\r\n            color: #3f414d;\r\n            font-size: 10px;\r\n            font-weight: normal;\r\n        }\r\n        .demo-i-circle-custom p{\r\n            color: #657180;\r\n            font-size: 8px;\r\n            margin: 5px 0 2px;\r\n        }\r\n        .demo-i-circle-custom span{\r\n            display: block;\r\n            padding-top: 15px;\r\n            color: #657180;\r\n            font-size: 10px;}\r\n           .demo-i-circle-custom span :before{\r\n                content: '';\r\n                display: block;\r\n                width: 50px;\r\n                height: 1px;\r\n                margin: 0 auto;\r\n                background: #e0e3e6;\r\n                position: relative;\r\n                top: -20px;\r\n            };\r\n        .demo-i-circle-custom span i{\r\n            font-style: normal;\r\n            color: #3f414d;\r\n        }\r\n/*wz-btn wz-btn-primary wz-btn-small wz-btn-loading*/\r\n\r\n        .ivu-btn.ivu-btn-primary.ivu-btn-small:not(.ivu-btn-loading ){\r\n          padding :2px 10px!important;\r\n        }\r\n          td.ivu-table-expanded-cell{\r\n        background-color: white!important;\r\n\r\n    }\r\n",{"version":3,"sources":["Table.vue"],"names":[],"mappingssjBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"Table.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\">\r\n\r\n          <Row>\r\n        <Col :md=\"24\" >\r\n           \r\n\r\n\r\n\r\n<div >\r\n\r\n\r\n        <div id=\"container\" style=\"margin-bottom:10px;\">\r\n\r\n\r\n   <Button type=\"primary\" size=\"large\"  icon=\"ios-cloud-upload-outline\" id='pickfiles' @click=\"qiniu_upload\" style=\"padding-bottom:5px;\">上传文件</Button>\r\n         <Progress :percent=\"progresscount\" :status=\"progresstatus\" style=\"width=90%;vertical-align:middle\" v-if=\"progresshow\">\r\n                <Icon type=\"checkmark-circled\" v-if=\"progresscount==100\"></Icon>\r\n                <span v-if=\"progresscount===100\">上传成功</span>\r\n                <Icon type=\"close-circled\" v-if=\"progresstatus==='wrong'\"></Icon>\r\n                <span v-if=\"progresstatus==='wrong'\">上传失败</span>\r\n                <span style=\"position:absolute;left:50%;top:-5px;\" v-if=\"progresscount!==0&&progresscount!=100\">{{progressspeed}}</span>\r\n              </Progress>\r\n        </div>\r\n           \r\n            <div style=\"position:relative;\">\r\n              \r\n          \r\n                \r\n                 <Table  :columns=\"columns7\" :data=\"page_video_list\" ref=\"table\"></Table>\r\n\r\n                  <div style=\"position:absolute;top:0px;width:100%;height:100%;display: flex;\r\n                            align-items: center;\r\n                            justify-content: center;background: rgba(210, 216, 222, 0.5);\" v-if=\"list_loadding\">\r\n                   <Spin size=\"large\"></Spin>\r\n                   <h6 style=\"color:#2d8cf0;margin-top:10px;\">正在获取数据...</h6>\r\n                </div>\r\n            </div>\r\n\r\n                   <Page :total=\"this.video_list.length\" show-total @on-change=\"setInitPage\" style=\"text-align:right;margin-top:50px\"></Page>\r\n\r\n   <Button type=\"primary\" size=\"large\" @click=\"exportData(1)\"><Icon type=\"ios-download-outline\"></Icon> 导出原始数据</Button>\r\n    <Button type=\"primary\" size=\"large\" @click=\"exportData(2)\"><Icon type=\"ios-download-outline\"></Icon> 导出排序和过滤后的数据</Button>\r\n</div>\r\n            <div style=\"\" class=\"doc-content\">\r\n                <h5>表格综合实例</h5>\r\n\r\n        <p>轻松完成业务需求，再也不用被产品催了</p>\r\n            </div>\r\n             \r\n        </Col>\r\n\r\n\r\n        <Col :md=\"12\">\r\n           \r\n \r\n\r\n\r\n        </Col>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </Row> \r\n\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\n   import expandRow from './table-expand.vue';\r\n\r\n var vue;\r\n var uploader;\r\n  function getVideoName(video_name){\r\n      var video_name='';\r\n      var img_ext_list=[\".jpg\",\".png\",\".jpeg\"];\r\n      img_ext_list.forEach(function(e){\r\n          if(video_name.indexOf(e)!==-1)\r\n          {\r\n            let point_index=video_name.indexOf(e);\r\n          let leaf_index=video_name.lastIndexOf('/',point_index);\r\n           let line_index=video_name.lastIndexOf('_',point_index);\r\n             video_name=video_name.substring(line_index+1);\r\n           return video_name;\r\n\r\n          }\r\n      });\r\n\r\n\r\n        var video_ext_list=[\".mp4\"];\r\n    video_ext_list.forEach(function(e){\r\n        if(video_name.indexOf(e)!==-1)\r\n        {\r\n          let point_index=video_name.indexOf(e);\r\n        let leaf_index=video_name.lastIndexOf('/',point_index);\r\n          let line_index=video_name.lastIndexOf('_',point_index);\r\n           video_name=video_name.substring(line_index+1);\r\n           return video_name;\r\n        }\r\n    });\r\n           return video_name;\r\n\r\n  };\r\n\r\n  function getVideoDuration(video_duration_before){\r\n   let video_duration=parseInt(video_duration_before);\r\n              if(video_duration<=60){\r\n                if(video_duration<10)\r\n                  video_duration=\"00:00:0\"+video_duration;\r\n                else\r\n                  video_duration=\"00:00:\"+video_duration;\r\n\r\n              }\r\n              else if(video_duration>60&&video_duration<=60*60){\r\n                  const minute=Math.floor(video_duration/60);\r\n                  const s=Math.floor(video_duration%60);\r\n                  if(minute<10)\r\n                    video_duration=\"00:0\"+minute;\r\n                  else \r\n                    video_duration=\"00:\"+minute;\r\n\r\n                  \r\n                  if(s<10)\r\n                  video_duration=video_duration+\":0\"+s;\r\n\r\n                else\r\n                  video_duration=video_duration+\":\"+s;\r\n\r\n              }\r\n              else if (video_duration>60*60&&video_duration<60*60*60){\r\n                  const hour=Math.floor(video_duration/3600);\r\n                 \r\n                  const minute=Math.floor((video_duration%3600)/60);\r\n                    const s=Math.floor((video_duration%3600)%60);\r\n                   if(hour<10)\r\n                    video_duration=\"0\"+hour;\r\n                  else\r\n                    video_duration=hour+'';\r\n\r\n                   if(minute<10)\r\n                    video_duration=video_duration+\":0\"+minute;\r\n                  else \r\n                    video_duration=video_duration+\":\"+minute;\r\n                \r\n                   if(s<10)\r\n                    video_duration=video_duration+\":0\"+s;\r\n                  else \r\n                    video_duration=video_duration+\":\"+s;\r\n\r\n\r\n              }\r\n\r\n            return video_duration;\r\n  }\r\n  function getVideoSize(video_size){\r\n                      if(video_size<1024)\r\n                                  video_size=Math.round(video_size*100)/100+\" B\";\r\n                             else  if(video_size>=1024&&video_size<1024*1024)\r\n                                  video_size=Math.round(video_size/1024*100)/100+\" Kb\";\r\n                            else if(video_size>=1024*1024&&video_size<1024*1024*1024)\r\n                                 video_size=Math.round(video_size/(1024*1024)*100)/100+\" Mb\";\r\n\r\n                               return video_size;\r\n  }\r\n\r\n  function qiniuInit(vue){\r\n\r\n  uploader = Qiniu.uploader({\r\n      runtimes: 'html5,flash,html4',      // 上传模式，依次退化\r\n      browse_button: 'pickfiles',         // 上传选择的点选按钮，必需\r\n      uptoken_func: function(){    // 在需要获取uptoken时，该方法会被调用\r\n         // return \"123\"; \r\n      },\r\n      get_new_uptoken: false,             // 设置上传文件的时候是否每次都重新获取新的uptoken\r\n      // downtoken_url: '/downtoken',\r\n      // Ajax请求downToken的Url，私有空间时使用，JS-SDK将向该地址POST文件的key和domain，服务端返回的JSON必须包含url字段，url值为该文件的下载地址\r\n      unique_names: false,              // 默认false，key为文件名。若开启该选项，JS-SDK会为每个文件自动生成key（文件名）\r\n      save_key: false,                  // 默认false。若在服务端生成uptoken的上传策略中指定了sava_key，则开启，SDK在前端将不对key进行任何处理\r\n      domain: 'http://qiniu-plupload.qiniudn.com/',     // bucket域名，下载资源时用到，必需\r\n      container: 'container',             // 上传区域DOM ID，默认是browser_button的父元素\r\n      max_file_size: '1024mb',             // 最大文件体积限制\r\n      flash_swf_url: 'static/bower_components/plupload/js/Moxie.swf',  //引入flash，相对路径\r\n      max_retries: 0,                     // 上传失败最大重试次数\r\n      dragdrop: true,                     // 开启可拖曳上传\r\n      drop_element: 'container',          // 拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传\r\n      chunk_size: '10mb',                  // 分块上传时，每块的体积\r\n      auto_start: true,                   // 选择文件后自动上传，若关闭需要自己绑定事件触发上传\r\n      multi_selection: true,\r\n      filters : {\r\n          max_file_size : '1000mb',\r\n          prevent_duplicates: false,\r\n          // Specify what files to browse for\r\n          mime_types: [\r\n              {title : \"Video files\", extensions : \"mp4\"}, // 限定flv,mpg,mpeg,avi,wmv,mov,asf,rm,rmvb,mkv,m4v,mp4后缀格式上传\r\n              {title : \"Image files\", extensions : \"jpg,png,jpeg\"}, // 限定jpg,gif,png后缀上传\r\n          ]\r\n      },\r\n      init: {\r\n          'FilesAdded': function(up, files) {\r\n\r\n              plupload.each(files, function(file) {\r\n                vue.progresshow=true;\r\n              });\r\n          },\r\n          'BeforeUpload': function(up, file) {\r\n\r\n                 vue.progresscount=10;\r\n                 vue.progresstatus=\"active\";\r\n\r\n\r\n                  vue.progressspeed=\"1.5 Mb/s\";\r\n\r\n               var interval=setInterval(function(){\r\n               \tif(vue.progresscount===40){\r\n\t\t                clearInterval(interval)\r\n\r\n               \t\t  vue.$Notice.success({title:'上传成功'});\r\n\r\n\t\t                setTimeout(function(){\r\n\t\t                   vue.progressspeed=0;\r\n              \t\t\t   vue.progresstatus=\"wrong\";\r\n\r\n\t\t                  \t  vue.$Message.error('上传失败');\r\n\t\t               \t\t setTimeout(function(){\r\n\t\t               \t\t vue.progresscount=0;\r\n\r\n\t\t              \t\t\t\t  vue.progresshow=false;\r\n\r\n\r\n\t\t\t\t\t\t\t\t           var obj=\t{\r\n\t\t\t\t\t\t              \t\ttask_status:0,\r\n\t\t\t\t\t\t              \t\ttimestamp:\"2017-08-10 17:03:54\",\r\n\t\t\t\t\t\t              \t\tvideo_duration:\"11.121667\",\r\n\t\t\t\t\t\t              \t\tvideo_size:1732410,\r\n\t\t\t\t\t\t\t\t\t\t\tvideo_name:\"http://otl6ypoog.bkt.clouddn.com/Objectstoarge/videos/2017-08-10/33337_p.mp4\",\r\n\t\t\t\t\t\t              \t};\r\n\r\n\t\t\t\t\t\t              \tvue.video_list.push(obj);\r\n\t\t\t\t\t\t              \tvue.setInitPage(1);\r\n\t\t            \t\t\t  },4000)\r\n\t\t               \t\t},1000);\r\n               \t}else{\r\n               \t\t vue.progresscount+=2;\r\n\r\n               \t}\r\n              },100);\r\n\r\n          },\r\n          'UploadProgress': function(up, file) {\r\n          },\r\n          'FileUploaded': function(up, file, info) {\r\n          },\r\n          'Error': function(up, err, errTip) {\r\n                 //上传出错时，处理相关的事情\r\n                \r\n\r\n          },\r\n          'UploadComplete': function() {\r\n                 //队列文件处理完毕后，处理相关的事情\r\n          },\r\n          'Key': function(up, file) {\r\n              // return key\r\n          }\r\n      }\r\n  });\r\n}\r\nexport default {\r\n     components: { expandRow },\r\n\r\n  name: 'buttons',\r\n  data () {\r\n            return {\r\n              progresshow:false,\r\n              progresscount:0,\r\n              progresstatus:'active',\r\n              progressspeed:0,\r\n              video_list:[\r\n              \t{\r\n              \t\ttask_status:0,\r\n              \t\ttimestamp:\"2017-08-10 17:03:54\",\r\n              \t\tvideo_duration:\"11s\",\r\n              \t\tvideo_size:1732410,\r\n\t\t\t\t        \tvideo_name:\"p.mp4\",\r\n              \t},\r\n              \t{\r\n              \t\ttask_status:1,\r\n              \t\ttimestamp:\"2017-08-10 17:03:54\",\r\n              \t\tvideo_duration:\"11s\",\r\n              \t\tvideo_size:1732410,\r\n\t\t\t\t        \tvideo_name:\"p.mp4\",\r\n              \t},\r\n                {\r\n                  task_status:1,\r\n                  timestamp:\"2017-08-10 17:03:54\",\r\n                  video_duration:\"11s\",\r\n                  video_size:1732410,\r\n                  video_name:\"p.mp4\",\r\n                },\r\n                {\r\n                  task_status:0,\r\n                  timestamp:\"2017-08-10 17:03:54\",\r\n                  video_duration:\"11s\",\r\n                  video_size:1732410,\r\n                  video_name:\"p.mp4\",\r\n                },\r\n                {\r\n                  task_status:1,\r\n                  timestamp:\"2017-08-10 17:03:54\",\r\n                  video_duration:\"11s\",\r\n                  video_size:1732410,\r\n                  video_name:\"p.mp4\",\r\n                },\r\n                {\r\n                  task_status:0,\r\n                  timestamp:\"2017-08-10 17:03:54\",\r\n                  video_duration:\"11s\",\r\n                  video_size:1732410,\r\n                  video_name:\"p.mp4\",\r\n                },\r\n              ],\r\n              pageindex:1,\r\n              page_video_list:[],\r\n              lodding:false,\r\n              list_loadding:false,\r\n                columns7: [\r\n                         {\r\n                              type: 'expand',\r\n                             width:\"30\",\r\n                              ellipsis:'true',\r\n\r\n                              render: (h, params) => {\r\n                                  return h(expandRow, {\r\n                                      props: {\r\n                                          row: params.row\r\n                                      }\r\n                                  })\r\n                              }\r\n                          },\r\n                          {\r\n                              title: '视频名称',\r\n                              key: 'video_name',\r\n                              ellipsis:'true',\r\n                          },\r\n                          {\r\n                                 title: '上传时间',\r\n                              ellipsis:'true',\r\n                                key: 'timestamp',\r\n                             \r\n                          },\r\n\r\n                           {\r\n                              title: '时长',\r\n                              ellipsis:'true',\r\n                              key:'video_duration',\r\n                          },\r\n                          {\r\n                              title: '大小',\r\n                              ellipsis:'true',\r\n                              key:'video_size',\r\n                             filters: [\r\n                            {\r\n                                label: '大于10M',\r\n                                value: 1\r\n                            },\r\n                            {\r\n                                label: '小于10M',\r\n                                value: 2\r\n                            }\r\n                        ],\r\n                        filterMultiple: false,\r\n                        filterMethod (value, row) {\r\n                            if (value === 1) {\r\n                                return row.video_size>1024*1024*1024*10;\r\n                            } else if (value === 2) {\r\n                                return row.video_size<1024*1024*10;\r\n                            }\r\n                        }\r\n                          },\r\n                           {\r\n                              title: '状态',\r\n                              ellipsis:'true',\r\n                              filters: [\r\n                            {\r\n                                label: '处理完成',\r\n                                value: 1\r\n                            },\r\n                            {\r\n                                label: '正在处理',\r\n                                value: 2\r\n                            }\r\n                        ],\r\n                        filterMultiple: false,\r\n                        filterMethod (value, row) {\r\n                            if (value === 1) {\r\n                                return row.task_status===1;\r\n                            } else if (value === 2) {\r\n                                return row.task_status===0;\r\n                           }\r\n                        },\r\n\r\n                              render: (h, params) => {\r\n                                const task_status=parseInt(params.row.task_status);\r\n\r\n                                if(task_status===0)\r\n                                    return h('div', [\r\n                                  h('Tag', {\r\n                                props: {\r\n                                    type: 'dot',\r\n                                    color: \"blue\"\r\n                                }\r\n                            }, \"正在处理\"),\r\n                                     ]);\r\n\r\n                                else if(task_status===1)\r\n                                    return h('div', [\r\n                                      \r\n                                          h('Tag', {\r\n                                props: {\r\n                                    type: 'dot',\r\n                                    color: \"green\"\r\n                                }\r\n                            }, \"处理完成\"),\r\n                                     ]);\r\n                            }\r\n                          },\r\n                         \r\n                          {\r\n                              title: '操作',\r\n                              key: 'action',\r\n                              align: 'center',\r\n                              ellipsis:'true',\r\n\r\n                              render: (h, params) => {\r\n                                const task_status=parseInt(params.row.task_status);\r\n                                if(task_status===0)\r\n                                {\r\n                                  return h('div', [\r\n                                    h('Tooltip',{\r\n                                          props: {\r\n                                              content: '还未分析完成，暂时不能查看',\r\n                                          },\r\n                                    },[\r\n                                    h('Button', {\r\n                                          props: {\r\n                                              type: 'primary',\r\n                                              size: 'small',\r\n                                              loading:true,\r\n                                          },\r\n                                          style: {\r\n                                              marginRight: '5px'\r\n                                          },\r\n                                      }, '处理中')]),\r\n                                      h('Button', {\r\n                                          props: {\r\n                                              type: 'error',\r\n                                              size: 'small',\r\n                                              disabled:true,\r\n                                          },\r\n                                          on: {\r\n                                              click: () => {\r\n                                                  this.remove(params.index)\r\n                                              }\r\n                                          }\r\n                                      }, '删除')\r\n                                    \r\n                                      \r\n                                  ]);\r\n                                }\r\n                                else if(task_status===1){\r\n                                  return h('div', [\r\n                                      h('Button', {\r\n                                          props: {\r\n                                              type: 'primary',\r\n                                              size: 'small',\r\n                                          },\r\n                                          style: {\r\n                                              marginRight: '5px'\r\n                                          },\r\n                                          on: {\r\n                                              click: () => {\r\n                                          this.$router.push({path:'/tabledetail/'+(((this.pageindex-1)*10)+params.index) })\r\n\r\n                                              }\r\n                                          },\r\n                                      }, '查看结果'),\r\n                                      h('Button', {\r\n                                          props: {\r\n                                              type: 'error',\r\n                                              size: 'small',\r\n                                          },\r\n                                          on: {\r\n                                              click: () => {\r\n                                                  this.remove(params.index)\r\n                                              }\r\n                                          }\r\n                                      }, '删除')\r\n                                  ]);\r\n                              }\r\n                                }//render\r\n                            },//{\r\n                ],//cloumn\r\n            }//return\r\n        },//data\r\n        methods: {\r\n\t\t            remove (index) {\r\n\t\t                this.video_list.splice(index, 1);\r\n\t\t            },\r\n\t\t        qiniu_upload(){\r\n\t\t          uploader.start();\r\n\t\t        },\r\n\t\t        setInitPage(page)\r\n\t\t        {\r\n\r\n\t\t          this.page_video_list=[];\r\n\t\t          this.pageindex=page;\r\n\t\t            let video_list=this.video_list;\r\n\t\t          for(let i=(page-1)*10;i<(page-1)*10+10;i++)\r\n\t\t          {\r\n\r\n\r\n\t\t              if(i<video_list.length)\r\n\t\t              {\r\n\r\n\t\t                 this.page_video_list.push(this.video_list[i]);\r\n\r\n\t\t              }\r\n\t\t          }\r\n\t\t       },\r\n            exportData (type) {\r\n                if (type === 1) {\r\n                    this.$refs.table.exportCsv({\r\n                        filename: '原始数据',\r\n                        columns: this.columns7,\r\n                        data: this.video_list\r\n                    });\r\n                } else if (type === 2) {\r\n                    this.$refs.table.exportCsv({\r\n                        filename: '排序和过滤后的数据',\r\n                        original: false\r\n                    });\r\n                } \r\n            }        \r\n     },\r\n     mounted(){\r\n          const vue=this;\r\n\r\n            this.list_loadding=true;\r\n            setTimeout(function(){\r\n          \t\t  vue.list_loadding=false;\r\n\r\n            },2000)\r\n           qiniuInit(vue);//初始化七牛数据\r\n           this.setInitPage(1);\r\n        },\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n<style type=\"text/css\" scoped>\r\n.ivu-tag-dot{\r\n\tborder: none!important;\r\n}\r\ntr.ivu-table-row-hover td .ivu-tag-dot{\r\n\tbackground-color: #ebf7ff!important;\r\n}\r\n\r\n .demo-i-circle-custom h1{\r\n            color: #3f414d;\r\n            font-size: 10px;\r\n            font-weight: normal;\r\n        }\r\n        .demo-i-circle-custom p{\r\n            color: #657180;\r\n            font-size: 8px;\r\n            margin: 5px 0 2px;\r\n        }\r\n        .demo-i-circle-custom span{\r\n            display: block;\r\n            padding-top: 15px;\r\n            color: #657180;\r\n            font-size: 10px;}\r\n           .demo-i-circle-custom span :before{\r\n                content: '';\r\n                display: block;\r\n                width: 50px;\r\n                height: 1px;\r\n                margin: 0 auto;\r\n                background: #e0e3e6;\r\n                position: relative;\r\n                top: -20px;\r\n            };\r\n        .demo-i-circle-custom span i{\r\n            font-style: normal;\r\n            color: #3f414d;\r\n        }\r\n/*wz-btn wz-btn-primary wz-btn-small wz-btn-loading*/\r\n\r\n        .ivu-btn.ivu-btn-primary.ivu-btn-small:not(.ivu-btn-loading ){\r\n          padding :2px 10px!important;\r\n        }\r\n          td.ivu-table-expanded-cell{\r\n        background-color: white!important;\r\n\r\n    }\r\n</style>\r\n\r\n\r\n\r\n"]}]}